"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[901],{73900:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>c,frontMatter:()=>l,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"project/2025/georgiana.ilie0803/index","title":"Weather-Based Mood Lamp","description":"A decorative lamp that adapts its ambient color effects based on weather conditions.","source":"@site/versioned_docs/version-acs_cc/project/2025/georgiana.ilie0803/index.md","sourceDirName":"project/2025/georgiana.ilie0803","slug":"/project/2025/georgiana.ilie0803/","permalink":"/docs/acs_cc/project/2025/georgiana.ilie0803/","draft":false,"unlisted":false,"editUrl":"https://www.github.com/upb-pmrust/website/edit/main/website/versioned_docs/version-acs_cc/project/2025/georgiana.ilie0803/index.md","tags":[],"version":"acs_cc","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Snake Game","permalink":"/docs/acs_cc/project/2025/george.plai/"},"next":{"title":"Guitar Tuner","permalink":"/docs/acs_cc/project/2025/ianis.armencea/"}}');var s=i(74848),n=i(28453);const l={},a="Weather-Based Mood Lamp",d={},o=[{value:"Description",id:"description",level:2},{value:"Motivation",id:"motivation",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Log",id:"log",level:2},{value:"Week 5 - 11 May",id:"week-5---11-may",level:3},{value:"Week 12 - 18 May",id:"week-12---18-may",level:3},{value:"Week 19 - 25 May",id:"week-19---25-may",level:3},{value:"Hardware",id:"hardware",level:2},{value:"Schematics",id:"schematics",level:3},{value:"Bill of Materials",id:"bill-of-materials",level:3},{value:"Software",id:"software",level:2},{value:"Links",id:"links",level:2}];function h(e){const t={a:"a",admonition:"admonition",br:"br",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"weather-based-mood-lamp",children:"Weather-Based Mood Lamp"})}),"\n",(0,s.jsx)(t.p,{children:"A decorative lamp that adapts its ambient color effects based on weather conditions."}),"\n",(0,s.jsxs)(t.admonition,{type:"info",children:[(0,s.jsx)(t.mdxAdmonitionTitle,{}),(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Author"}),": Georgiana-Elena Ilie ",(0,s.jsx)(t.br,{}),"\n",(0,s.jsx)(t.strong,{children:"GitHub Project Link"}),": ",(0,s.jsx)(t.a,{href:"https://github.com/UPB-PMRust-Students/proiect-georgianailie109",children:"https://github.com/UPB-PMRust-Students/proiect-georgianailie109"})]})]}),"\n",(0,s.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,s.jsx)(t.p,{children:"The Weather-Based Mood Lamp is a smart decorative device that changes its RGB lighting effects based on the weather outside. It uses two ESP32 microcontrollers: one that connects to the internet and fetches real-time weather information from the OpenWeatherMap API, and a second one that allows the user to simulate local weather by inputting custom temperature and humidity values."}),"\n",(0,s.jsx)(t.p,{children:"This allows for both automatic operation and manual testing, with a button enabling the user to switch between real-time online data and locally simulated weather. The lamp uses a ring of individually addressable RGB LEDs (WS2812) to generate ambient lighting effects based on the current weather, such as sunshine, rain, snow, or clouds."}),"\n",(0,s.jsx)(t.h2,{id:"motivation",children:"Motivation"}),"\n",(0,s.jsx)(t.p,{children:"I chose this project as a way to combine aesthetics with technology. It brings together microcontroller programming in Rust, real-time data interaction, and RGB lighting to create a decorative lamp that changes its appearance based on the current weather. The cloud-shaped design makes the lamp look friendly and relaxing, which means it can work not just as a smart decorative light, but also as a fun way for kids to learn about the weather or use it as a nightlight. The project also gives me a way to demonstrate communication between two microcontrollers and the integration of internet-based data."}),"\n",(0,s.jsx)(t.h2,{id:"architecture",children:"Architecture"}),"\n",(0,s.jsx)(t.p,{children:"The project consists of two main components:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"ESP32 A (Main Controller)"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Connects to the internet"}),"\n",(0,s.jsx)(t.li,{children:"Fetches weather data from OpenWeatherMap API"}),"\n",(0,s.jsx)(t.li,{children:"Controls the RGB LED ring"}),"\n",(0,s.jsx)(t.li,{children:"Reads mode switch input (button)"}),"\n",(0,s.jsx)(t.li,{children:"Communicates with ESP32 B via UART"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"ESP32 B (Local Weather Simulator)"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Allows the user to simulate weather via UART"}),"\n",(0,s.jsx)(t.li,{children:"Sends temperature and humidity data to ESP32 A"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Mode Switching:"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Controlled via a physical button connected to ESP32 A"}),"\n",(0,s.jsx)(t.li,{children:"Toggles between ONLINE mode (API weather) and LOCAL mode (simulated weather)"}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"diagram",src:i(54774).A+"",width:"648",height:"511"})}),"\n",(0,s.jsx)(t.h2,{id:"log",children:"Log"}),"\n",(0,s.jsx)(t.h3,{id:"week-5---11-may",children:"Week 5 - 11 May"}),"\n",(0,s.jsx)(t.h3,{id:"week-12---18-may",children:"Week 12 - 18 May"}),"\n",(0,s.jsx)(t.h3,{id:"week-19---25-may",children:"Week 19 - 25 May"}),"\n",(0,s.jsx)(t.h2,{id:"hardware",children:"Hardware"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"ESP32 Dev Board A"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Main microcontroller; connects to Wi-Fi, gets weather data from the internet using an API, controls the LEDs, and handles the mode switching."}),"\n",(0,s.jsx)(t.li,{children:"Communicates with the secondary controller via UART in local mode."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"ESP32 Dev Board B"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Secondary microcontroller; simulates weather conditions by sending custom temperature and humidity values to the main controller via UART."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"WS2812 RGB LED Ring (24 LEDs)"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Displays ambient lighting that changes based on the current weather (sunny, rainy, snowy, cloudy)."}),"\n",(0,s.jsx)(t.li,{children:"Controlled by a single data pin from the main ESP32."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Push Button"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Allows switching between online (API-based) and local (simulated) weather modes."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Power Bank (5V / 2A)"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Portable power supply for both ESP32 boards and the LED ring."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"schematics",children:"Schematics"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"diagram",src:i(13526).A+"",width:"1020",height:"721"})}),"\n",(0,s.jsx)(t.h3,{id:"bill-of-materials",children:"Bill of Materials"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Device"}),(0,s.jsx)(t.th,{children:"Usage"}),(0,s.jsx)(t.th,{children:"Price"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/placi-cu-bluetooth/4371-placa-de-dezvoltare-esp32-cu-wifi-i-bluetooth-42.html",children:"ESP32 cu WiFi si Bluetooth 4.2"})}),(0,s.jsx)(t.td,{children:"Main and secondary controller"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/placi-cu-bluetooth/4371-placa-de-dezvoltare-esp32-cu-wifi-i-bluetooth-42.html",children:"2 x 34,99 lei = 69,98 lei"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/optoelectronice-altele/5623-inel-cu-24-led-uri-rgb-adresabile-ws2812.html",children:"WS2812 RGB LED Ring 24"})}),(0,s.jsx)(t.td,{children:"RGB lighting"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/optoelectronice-altele/5623-inel-cu-24-led-uri-rgb-adresabile-ws2812.html",children:"23,18 lei"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/senzori-senzori-de-temperatura/1449-modul-senzor-de-temperatura-i-umiditate-dht22.html",children:"DHT22 Temp/Humidity Sensor"})}),(0,s.jsx)(t.td,{children:"Optional local sensor"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/senzori-senzori-de-temperatura/1449-modul-senzor-de-temperatura-i-umiditate-dht22.html",children:"23,12 lei"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/en/breadboards/8-breadboard-hq-830-points.html",children:"Breadboard 830 points"})}),(0,s.jsx)(t.td,{children:"Connect all components"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/en/breadboards/8-breadboard-hq-830-points.html",children:"4 x 9,98 lei = 39,92 lei"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/fire-fire-mufate/882-set-fire-mama-mama-40p-30-cm.html",children:"Jumper Wires M-M 30cm"})}),(0,s.jsx)(t.td,{children:"Connections"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/fire-fire-mufate/882-set-fire-mama-mama-40p-30-cm.html",children:"7,98 lei"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/fire-fire-mufate/890-set-fire-tata-tata-40p-30-cm.html",children:"Jumper Wires F-F 30cm"})}),(0,s.jsx)(t.td,{children:"Connections"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/fire-fire-mufate/890-set-fire-tata-tata-40p-30-cm.html",children:"9,99 lei"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/fire-fire-mufate/92-fire-colorate-mama-tata-40p.html",children:"Jumper Wires M-F 20cm"})}),(0,s.jsx)(t.td,{children:"Connections"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/fire-fire-mufate/92-fire-colorate-mama-tata-40p.html",children:"7,99 lei"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/componente-electronice-condensatoare/3004-condensator-electrolitic-de-1000-uf-la-35-v.html",children:"Capacitor 1000uF 35V"})}),(0,s.jsx)(t.td,{children:"LED spike protection"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/componente-electronice-condensatoare/3004-condensator-electrolitic-de-1000-uf-la-35-v.html",children:"2,99 lei"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/cabluri-cabluri-usb/11939-cablu-negru-micro-usb-1-m.html",children:"Micro USB Cable"})}),(0,s.jsx)(t.td,{children:"Power + programming"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/cabluri-cabluri-usb/11939-cablu-negru-micro-usb-1-m.html",children:"2 x 3,99 lei = 7,98 lei"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/en/resistors/1088-025w-10k-resistor.html",children:"10k\u03a9 Resistor"})}),(0,s.jsx)(t.td,{children:"Pull-up for sensor"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/en/resistors/1088-025w-10k-resistor.html",children:"0,10 lei"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/en/resistors/1099-025w-470-resistor.html",children:"470\u03a9 Resistor"})}),(0,s.jsx)(t.td,{children:"Signal line protection"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/en/resistors/1099-025w-470-resistor.html",children:"0,10 lei"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Enclosure Box"}),(0,s.jsx)(t.td,{children:"Component protection"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/en/buttons-and-switches/1115-white-button-with-round-cover.html",children:"White Round Button"})}),(0,s.jsx)(t.td,{children:"Mode switch"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/en/buttons-and-switches/1115-white-button-with-round-cover.html",children:"1,99 lei"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Power Bank PROMATE Bolt-20PD"}),(0,s.jsx)(t.td,{children:"Power supply"}),(0,s.jsx)(t.td,{})]})]})]}),"\n",(0,s.jsx)(t.p,{children:"Total: ~200 de lei"}),"\n",(0,s.jsx)(t.h2,{id:"software",children:"Software"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Library"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Usage"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/embassy-rs/embassy",children:"embassy"})}),(0,s.jsx)(t.td,{children:"Async runtime for embedded Rust"}),(0,s.jsx)(t.td,{children:"Used for async execution, Wi-Fi, and peripheral control"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/smart-leds-rs/ws2812-spi-rs",children:"ws2812-rs"})}),(0,s.jsx)(t.td,{children:"WS2812 LED control"}),(0,s.jsx)(t.td,{children:"Drives RGB lighting effects"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/serde-rs/serde",children:"serde"})}),(0,s.jsx)(t.td,{children:"Serialization framework"}),(0,s.jsx)(t.td,{children:"Used to parse JSON from API"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/serde-rs/json",children:"serde_json"})}),(0,s.jsx)(t.td,{children:"JSON parsing"}),(0,s.jsx)(t.td,{children:"Parses weather data"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/esp-rs/esp-idf-hal",children:"esp-idf-hal"})}),(0,s.jsx)(t.td,{children:"ESP32 hardware abstraction"}),(0,s.jsx)(t.td,{children:"For pin, UART, and GPIO access"})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"links",children:"Links"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://openweathermap.org/api",children:"OpenWeatherMap API"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://cdn-shop.adafruit.com/datasheets/WS2812.pdf",children:"WS2812 RGB LEDs Documentation"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://pmrust.pages.upb.ro/docs/acs_cc/lab/03",children:"Lab 03 - PWM & ADC"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://pmrust.pages.upb.ro/docs/acs_cc/lab/07",children:"Lab 07 - Wi-Fi"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://esp-rs.github.io/book/",children:"ESP32 Rust Book"})}),"\n"]})]})}function c(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},54774:(e,t,i)=>{i.d(t,{A:()=>r});const r=i.p+"assets/images/Architecture-5d69ee50f92297a4445140768e76040a.webp"},13526:(e,t,i)=>{i.d(t,{A:()=>r});const r=i.p+"assets/images/schematic-21130143846d4e8ab47bf6f15572e886.webp"},28453:(e,t,i)=>{i.d(t,{R:()=>l,x:()=>a});var r=i(96540);const s={},n=r.createContext(s);function l(e){const t=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(n.Provider,{value:t},e.children)}}}]);