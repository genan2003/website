"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3836],{85290:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"project/2025/jaleesha.abbas/index","title":"Expose or Explore","description":"Dare to play? An interactive Truth or Dare game merging hardware fun and Rust power on Raspberry Pi Pico.","source":"@site/versioned_docs/version-fils_en/project/2025/jaleesha.abbas/index.md","sourceDirName":"project/2025/jaleesha.abbas","slug":"/project/2025/jaleesha.abbas/","permalink":"/docs/fils_en/project/2025/jaleesha.abbas/","draft":false,"unlisted":false,"editUrl":"https://www.github.com/upb-pmrust/website/edit/main/website/versioned_docs/version-fils_en/project/2025/jaleesha.abbas/index.md","tags":[],"version":"fils_en","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Simulated Automotive ECU","permalink":"/docs/fils_en/project/2025/iulian.dorobantu/"},"next":{"title":"Sudoku Game","permalink":"/docs/fils_en/project/2025/laura.sandu1304/"}}');var i=n(74848),t=n(28453);const d={},l="Expose or Explore",a={},c=[{value:"Description",id:"description",level:2},{value:"Motivation",id:"motivation",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Log",id:"log",level:2},{value:"Week 6 - 12 May",id:"week-6---12-may",level:3},{value:"Week 7 - 19 May",id:"week-7---19-may",level:3},{value:"Week 20 - 26 May",id:"week-20---26-may",level:3},{value:"Hardware",id:"hardware",level:2},{value:"Photos",id:"photos",level:2},{value:"Device Front View",id:"device-front-view",level:3},{value:"Device Side View",id:"device-side-view",level:3},{value:"Schematic",id:"schematic",level:2},{value:"Bill of Materials",id:"bill-of-materials",level:2},{value:"Software",id:"software",level:2},{value:"Links",id:"links",level:2}];function o(e){const s={a:"a",admonition:"admonition",br:"br",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"expose-or-explore",children:"Expose or Explore"})}),"\n",(0,i.jsx)(s.p,{children:"Dare to play? An interactive Truth or Dare game merging hardware fun and Rust power on Raspberry Pi Pico."}),"\n",(0,i.jsxs)(s.admonition,{type:"info",children:[(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Author"}),": Jaleesha Abbas"]}),(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"GitHub Project Link"}),": ",(0,i.jsx)(s.a,{href:"https://github.com/UPB-PMRust-Students/project-Jaleesha",children:"https://github.com/UPB-PMRust-Students/project-Jaleesha"})]})]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(s.p,{children:"Expose or Explore is an interactive Truth or Dare game that combines fun with embedded technology. Players interact using buttons and a rotary encoder to select game modes, difficulties, and receive random challenges displayed on an OLED screen.\nKey gameplay features:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Truth or Dare buttons randomly assign challenges from a local JSON database."}),"\n",(0,i.jsx)(s.li,{children:"Rotary encoder allows choosing between modes: Truth Only, Dare Only, or Random."}),"\n",(0,i.jsx)(s.li,{children:"Automatic switching to Dare if Truth is refused."}),"\n",(0,i.jsx)(s.li,{children:"LEDs and a buzzer provide visual and audio feedback."}),"\n",(0,i.jsx)(s.li,{children:"A Start button resets the game for the next round."}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"This project integrates multiple hardware components to create a fully immersive embedded game experience."}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"motivation",children:"Motivation"}),"\n",(0,i.jsx)(s.p,{children:"Throughout my life, games have always been a source of excitement for me. From simple childhood games to complex video games, the idea of creating experiences that bring people together has always fascinated me."}),"\n",(0,i.jsx)(s.p,{children:"While my main passion has been in software and coding, but after learning Rust and embedded development, I saw this project as the perfect opportunity to push myself further. Instead of just making simple embedded project, I wanted to create something interactive, fun, and social \u2014 a game that people can actually play and enjoy."}),"\n",(0,i.jsx)(s.p,{children:'"Expose or Explore" is my way of turning technical learning into something playful and dynamic. Even though hardware has never been my strongest area, I challenged myself to bring together logic into a complete physical device running my code. The idea of seeing my game actually work on real hardware, where people interact and enjoy, is extremely motivating.'}),"\n",(0,i.jsx)(s.p,{children:"This project is my personal step towards merging my love for software with the physical world. I hope it inspires others to see that embedded systems can be exciting, interactive, and fun."}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"architecture",children:"Architecture"}),"\n",(0,i.jsx)(s.p,{children:"The Raspberry Pi Pico serves as the central control unit, coordinating all hardware peripherals and logic for the game."}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"OLED Display"})," (SPI):",(0,i.jsx)(s.br,{}),"\n","Acts as the main interface. Displays game modes, player actions (Truth, Dare), and the challenges fetched from the local JSON database."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Rotary Encoder"})," (GPIO + Interrupts):",(0,i.jsx)(s.br,{}),"\n","Allows users to select the game mode (Truth Only, Dare Only, Random) and difficulty level (Easy, Medium, Hard). This gives customization and control over the gameplay."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Push Buttons"})," (GPIO):",(0,i.jsx)(s.br,{}),"\n","Dedicated buttons are used for selecting Truth or Dare actions. Once pressed, the system will randomly select a challenge and display it on the OLED."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Buzzer"})," (GPIO):",(0,i.jsx)(s.br,{}),"\n","Provides sound feedback during game events \u2014 for example, when a new challenge is displayed or when a user refuses Truth (auto-switch to Dare)."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"RGB LED (Tri-Leg)"})," (GPIO + PWM):",(0,i.jsx)(s.br,{}),"\n","Provides colorful visual feedback depending on the action (Truth \u2192 Blue, Dare \u2192 Red, Game Mode Selection \u2192 Green)."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Single LEDs (Red, Green, White)"})," \u2192 Visual Feedback (game states or indication)"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Start Button"})," (GPIO):",(0,i.jsx)(s.br,{}),"\n","Resets the game and gets it ready for the next round or player."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Local JSON Storage"})," (On-Device Storage / Flash):",(0,i.jsx)(s.br,{}),"\n","Stores all Truth and Dare challenges. On player action, the game randomly selects a challenge and displays it on the OLED."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"How they connect:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"The Raspberry Pi Pico receives all player inputs (rotary encoder + buttons)."}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"It then processes them and selects challenges or actions accordingly."}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Challenges are fetched from the local JSON and sent to the OLED for display."}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"At the same time, feedback (audio from the buzzer and visuals from RGB LEDs) is triggered."}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"After each round, players can press the Start button to reset the game logic."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"Architecture",src:n(98485).A+"",width:"1024",height:"1536"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"log",children:"Log"}),"\n",(0,i.jsx)(s.h3,{id:"week-6---12-may",children:"Week 6 - 12 May"}),"\n",(0,i.jsx)(s.p,{children:"I uploaded the necessary project documentation, making sure everything was in order. Then, I began working on the schematics, carefully mapping out the design. Additionally, I started developing some of the software. Each step brought the project closer to realization."}),"\n",(0,i.jsx)(s.h3,{id:"week-7---19-may",children:"Week 7 - 19 May"}),"\n",(0,i.jsx)(s.p,{children:"Continuing the progress. Will update as soon as I reach the milestone."}),"\n",(0,i.jsx)(s.h3,{id:"week-20---26-may",children:"Week 20 - 26 May"}),"\n",(0,i.jsx)(s.p,{children:"Continuing the progress. Will update as soon as I reach the milestone."}),"\n",(0,i.jsx)(s.h2,{id:"hardware",children:"Hardware"}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"photos",children:"Photos"}),"\n",(0,i.jsx)(s.h3,{id:"device-front-view",children:"Device Front View"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"Device Front View",src:n(97866).A+"",width:"465",height:"845"})}),"\n",(0,i.jsx)(s.h3,{id:"device-side-view",children:"Device Side View"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"Device Side View",src:n(84319).A+"",width:"1024",height:"431"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"OLED Display (SSD1331)"})," \u2192 Displays Truth or Dare prompts and game states."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Push Buttons"})," \u2192 Used to select Truth, Dare, and other game options."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Rotary Encoder"})," \u2192 Allows the player to select game modes and difficulty >"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Active Buzzer"})," \u2192 Provides sound feedback when a Truth or Dare is selecte>"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"RGB LED (3-legged)"})," \u2192 Provides colorful visual feedback and indicates ga>"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Single Color LEDs (Red, White, Green)"})," \u2192 Used for specific cues and visu>"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Power Supply (Micro USB)"})," \u2192 Powers the Raspberry Pi Pico and peripherals."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Challenge Database (JSON stored locally)"})," \u2192 Holds the game challenges an>"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"schematic",children:"Schematic"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"Schematic",src:n(78877).A+"",width:"1123",height:"794"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"bill-of-materials",children:"Bill of Materials"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Device"}),(0,i.jsx)(s.th,{children:"Usage"}),(0,i.jsx)(s.th,{children:"Price"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Raspberry Pi Pico 2350"}),(0,i.jsx)(s.td,{children:"Microcontroller (Main Controller)"}),(0,i.jsx)(s.td,{children:"51 RON"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:'OLED Display 0.96" SSD1331 (SPI)'}),(0,i.jsx)(s.td,{children:"Display module (Truth/Dare Modes)"}),(0,i.jsx)(s.td,{children:"50 RON"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"RGB LED (3-Leg Common Cathode)"}),(0,i.jsx)(s.td,{children:"Visual feedback (RGB colours)"}),(0,i.jsx)(s.td,{children:"5 RON"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Resistors (220\u03a9 - 470\u03a9)"}),(0,i.jsx)(s.td,{children:"Current limiting for LEDs"}),(0,i.jsx)(s.td,{children:"5 RON"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Single LEDs (Red, Green, Colourless/White, White)"}),(0,i.jsx)(s.td,{children:"Visual indicators"}),(0,i.jsx)(s.td,{children:"5 RON"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Push Buttons (3x)"}),(0,i.jsx)(s.td,{children:"Truth, Dare, Start"}),(0,i.jsx)(s.td,{children:"8 RON"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Rotary Encoder with push"}),(0,i.jsx)(s.td,{children:"Game selection input"}),(0,i.jsx)(s.td,{children:"5 RON"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Active Buzzer"}),(0,i.jsx)(s.td,{children:"Sound feedback"}),(0,i.jsx)(s.td,{children:"1.5 RON"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Breadboard"}),(0,i.jsx)(s.td,{children:"Circuit prototyping"}),(0,i.jsx)(s.td,{children:"10 RON"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Jumper Wires (Male-Male, Male-Female ~30 wires)"}),(0,i.jsx)(s.td,{children:"Connections"}),(0,i.jsx)(s.td,{children:"8 RON"})]})]})]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"software",children:"Software"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Library"}),(0,i.jsx)(s.th,{children:"Description"}),(0,i.jsx)(s.th,{children:"Usage"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"embassy"}),(0,i.jsx)(s.td,{children:"Rust framework for embedded programming"}),(0,i.jsx)(s.td,{children:"Used for async tasks, delays, blinking LEDs, button handling"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"rp2040-hal"}),(0,i.jsx)(s.td,{children:"Rust crate for RP2040 peripherals"}),(0,i.jsx)(s.td,{children:"Used for GPIO, SPI, PWM, and other microcontroller functions"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"embedded-hal"}),(0,i.jsx)(s.td,{children:"Rust crate providing embedded hardware abstraction"}),(0,i.jsx)(s.td,{children:"Used for generic traits for GPIO, SPI, and other peripherals"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"rand"}),(0,i.jsx)(s.td,{children:"Rust crate for random number generation"}),(0,i.jsx)(s.td,{children:"Used to select random Truth or Dare challenges"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"serde + serde_json"}),(0,i.jsx)(s.td,{children:"Rust crates for serialization and JSON parsing"}),(0,i.jsx)(s.td,{children:"Used to load and parse local JSON database of Truth and Dare"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"ssd1331"}),(0,i.jsx)(s.td,{children:"Rust driver crate for SSD1331 OLED display (SPI)"}),(0,i.jsx)(s.td,{children:"Used for displaying text like Truth, Dare, and other messages"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"embassy-time"}),(0,i.jsx)(s.td,{children:"Rust crate for async time handling"}),(0,i.jsx)(s.td,{children:"Used for delays, LED blinking and timing related tasks"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"embassy-sync"}),(0,i.jsx)(s.td,{children:"Rust crate for task synchronization"}),(0,i.jsx)(s.td,{children:"Used to manage async/await tasks cleanly (optional but recommended)"})]})]})]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"links",children:"Links"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://youtu.be/l2W_75S8Dek?si=JOiQHMjfI7fidVtF",children:"Rotary Encoder + Raspberry Pi Pico Example"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://youtube.com/shorts/moTiZWjkDvk?si=78VKgAnXZ8TciS3m",children:"RGB LED 3-Leg Common Cathode Wiring Example"})}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["Written with ",(0,i.jsx)(s.a,{href:"https://stackedit.io/",children:"StackEdit"})]})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},98485:(e,s,n)=>{n.d(s,{A:()=>r});const r=n.p+"assets/images/Architecture-ed6c6330ac681a08a2c552dcb4ffde8a.webp"},97866:(e,s,n)=>{n.d(s,{A:()=>r});const r=n.p+"assets/images/one-ee1f75b8d78da9edb6be4c69336536e3.webp"},84319:(e,s,n)=>{n.d(s,{A:()=>r});const r=n.p+"assets/images/resized_two-3a4a22131801837ab8ff880978d43015.webp"},78877:(e,s,n)=>{n.d(s,{A:()=>r});const r=n.p+"assets/images/schematic-4fffc41205f05d40010eef0583931374.svg"},28453:(e,s,n)=>{n.d(s,{R:()=>d,x:()=>l});var r=n(96540);const i={},t=r.createContext(i);function d(e){const s=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),r.createElement(t.Provider,{value:s},e.children)}}}]);