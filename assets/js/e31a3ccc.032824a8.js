"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6221],{63872:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>n,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"project/2025/adragomir2806/index","title":"Raspberry PI-ANO","description":"A compact digital piano with physical keys, wireless audio output via Bluetooth, and interactive sound modes, built on a Raspberry Pi Pico 2W.","source":"@site/versioned_docs/version-fils_en/project/2025/adragomir2806/index.md","sourceDirName":"project/2025/adragomir2806","slug":"/project/2025/adragomir2806/","permalink":"/docs/fils_en/project/2025/adragomir2806/","draft":false,"unlisted":false,"editUrl":"https://www.github.com/upb-pmrust/website/edit/main/website/versioned_docs/version-fils_en/project/2025/adragomir2806/index.md","tags":[],"version":"fils_en","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"RustPark","permalink":"/docs/fils_en/project/2025/aal2/"},"next":{"title":"Dual-Mode Access Control System","permalink":"/docs/fils_en/project/2025/adrian.bitlan/"}}');var s=r(74848),o=r(28453);const n={},d="Raspberry PI-ANO",a={},l=[{value:"Description",id:"description",level:2},{value:"Motivation",id:"motivation",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Log",id:"log",level:2},{value:"Week 5 - 11 May",id:"week-5---11-may",level:3},{value:"Week 12 - 18 May",id:"week-12---18-may",level:3},{value:"Week 19 - 25 May",id:"week-19---25-may",level:3},{value:"Hardware",id:"hardware",level:2},{value:"Schematics",id:"schematics",level:3},{value:"Bill of Materials",id:"bill-of-materials",level:3},{value:"Software",id:"software",level:2},{value:"Links",id:"links",level:2}];function c(e){const t={a:"a",admonition:"admonition",br:"br",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"raspberry-pi-ano",children:"Raspberry PI-ANO"})}),"\n",(0,s.jsx)(t.p,{children:"A compact digital piano with physical keys, wireless audio output via Bluetooth, and interactive sound modes, built on a Raspberry Pi Pico 2W."}),"\n",(0,s.jsxs)(t.admonition,{type:"info",children:[(0,s.jsx)(t.mdxAdmonitionTitle,{}),(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Author"}),": Dragomir Alexandru ",(0,s.jsx)(t.br,{}),"\n",(0,s.jsx)(t.strong,{children:"GitHub Project Link"}),": ",(0,s.jsx)(t.a,{href:"https://github.com/UPB-PMRust-Students/project-Alexdr04",children:"https://github.com/UPB-PMRust-Students/project-Alexdr04"})]})]}),"\n",(0,s.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,s.jsx)(t.p,{children:"This project is built using a Raspberry Pi Pico 2W, seven push buttons for musical notes, a potentiometer for volume control, and a Bluetooth audio module for wireless sound output. It features a loop mode for recording and repeating note sequences, a distortion toggle for creative audio effects, and status LEDs to indicate the current mode."}),"\n",(0,s.jsx)(t.h2,{id:"motivation",children:"Motivation"}),"\n",(0,s.jsx)(t.p,{children:"I\u2019ve always enjoyed music and wanted to combine that interest with what I\u2019ve learned about embedded systems. This project gives me a fun, hands-on way to explore PWM audio, GPIO input, and Bluetooth output while building something creative and interactive."}),"\n",(0,s.jsx)(t.h2,{id:"architecture",children:"Architecture"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Schematic diagram",src:r(28700).A+"",width:"661",height:"470"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Controller"}),":",(0,s.jsx)(t.br,{}),"\n","Raspberry Pi Pico 2W \u2014 handles all logic, reads button inputs, and generates audio output via PWM."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Input System"}),":",(0,s.jsx)(t.br,{}),"\n","A set of 7 push buttons for the musical notes and 2 buttons for toggling loop and distortion modes. Connected to the Pico via GPIO."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Audio Processing Unit"}),":",(0,s.jsx)(t.br,{}),"\n","PWM signal from the Pico is passed through a potentiometer for volume control before reaching the Bluetooth module."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Output System"}),":",(0,s.jsx)(t.br,{}),"\n","MH-M28 Bluetooth audio module receives the analog signal and transmits it wirelessly to a portable speaker."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Visual Feedback"}),":",(0,s.jsx)(t.br,{}),"\n","3 LEDs indicate the current playback mode (normal, loop, or distortion). Controlled via GPIO."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Power Supply"}),":",(0,s.jsx)(t.br,{}),"\n","A 5V external power source powers the MH-M28 module separately from the Pico, ensuring stable Bluetooth audio output."]}),"\n",(0,s.jsx)(t.h2,{id:"log",children:"Log"}),"\n",(0,s.jsx)(t.h3,{id:"week-5---11-may",children:"Week 5 - 11 May"}),"\n",(0,s.jsx)(t.p,{children:"After my project was approved, I finalized the component list, ordered everything, and began assembling the hardware. I tested the debugger connection with the Raspberry Pi Pico 2W to ensure proper flashing and communication. I also experimented with basic GPIO inputs and outputs to validate button and LED functionality. Additionally, I started drafting the system schematic in KiCad and planned out the initial wiring layout on the breadboard."}),"\n",(0,s.jsx)(t.h3,{id:"week-12---18-may",children:"Week 12 - 18 May"}),"\n",(0,s.jsx)(t.h3,{id:"week-19---25-may",children:"Week 19 - 25 May"}),"\n",(0,s.jsx)(t.h2,{id:"hardware",children:"Hardware"}),"\n",(0,s.jsx)(t.p,{children:"The hardware includes a Raspberry Pi Pico 2W as the central controller, connected to seven push buttons for triggering musical notes and two additional buttons: one for enabling loop functionality and one for toggling a distortion effect. A potentiometer adjusts the volume of the PWM audio signal, which is then sent to an MH-M28 Bluetooth module for wireless audio output. Three LEDs indicate the current system status (normal, loop, or distortion). All components are powered via USB and a separate 5V source for the Bluetooth module. The entire system is built on a breadboard for prototyping."}),"\n",(0,s.jsx)(t.h3,{id:"schematics",children:"Schematics"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Schematic diagram",src:r(68473).A+"",width:"1024",height:"720"})}),"\n",(0,s.jsx)(t.h3,{id:"bill-of-materials",children:"Bill of Materials"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Device"}),(0,s.jsx)(t.th,{children:"Usage"}),(0,s.jsx)(t.th,{children:"Price"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.raspberrypi.com/documentation/microcontrollers/raspberry-pi-pico.html",children:"Raspberry Pi Pico 2W \xd72"})}),(0,s.jsx)(t.td,{children:"Microcontroller"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/placi-raspberry-pi/13327-raspberry-pi-pico-2-w.html?search_query=raspberry+pi+pico+2w&results=26",children:"39,66 RON \xd72"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://learn.sparkfun.com/tutorials/how-to-use-a-breadboard/all",children:"Breadboard 830 points \xd72"})}),(0,s.jsx)(t.td,{children:"Prototyping"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/prototipare-breadboard-uri/8-breadboard-830-points.html",children:"9,98 RON \xd72"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://sigmanortec.ro/en/bluetooth-42-ble-audio-module-stereo-mh-m28",children:"MH-M28 Bluetooth Module"})}),(0,s.jsx)(t.td,{children:"Audio output"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/wireless-bluetooth/8124-modul-pentru-transmisie-audio-fara-fir-ble-stereo-mh-m28.html?search_query=mh-m28&results=14",children:"13,29 RON"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.sunfounder.com/projects/kepler-kit/en/latest/component/component_potentiometer.html#potentiometer",children:"Rotary Potentiometer 10k\u03a9"})}),(0,s.jsx)(t.td,{children:"Volume control"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/componente-electronice-potentiometre/1886-potentiometru-stereo-10k.html?search_query=potentiometru&results=172",children:"1,99 RON"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.sunfounder.com/projects/kepler-kit/en/latest/component/component_button.html#button",children:"Tactile Button 6x6x6 \xd79"})}),(0,s.jsx)(t.td,{children:"User input"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/butoane-i-comutatoare/1119-buton-6x6x6.html?search_query=butoane+6x6x6&results=1",children:"0,36 RON \xd79"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.electronics-tutorials.ws/diode/diode_8.html",children:"White LED 5mm"})}),(0,s.jsx)(t.td,{children:"Mode indicator"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/optoelectronice-led-uri/930-led-alb-de-3-mm-cu-lentile-transparente.html?search_query=led+alb&results=175",children:"0,49 RON"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.electronics-tutorials.ws/diode/diode_8.html",children:"Red LED 5mm"})}),(0,s.jsx)(t.td,{children:"Mode indicator"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/optoelectronice-led-uri/29-led-set-3-culori-x-10-pcs-fiecare.html?search_query=led+rosu&results=166",children:"0,39 RON"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.electronics-tutorials.ws/diode/diode_8.html",children:"Green LED 5mm"})}),(0,s.jsx)(t.td,{children:"Mode indicator"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/optoelectronice-led-uri/931-led-verde-de-3-mm-cu-lentile-transparente.html?search_query=led+verde&results=90",children:"0,29 RON"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.sunfounder.com/projects/kepler-kit/en/latest/component/component_resistor.html",children:"Resistor 220\u03a9 \xd73"})}),(0,s.jsx)(t.td,{children:"LED limiter"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/componente-electronice-rezistoare/1097-rezistor-025w-220.html?search_query=rezistor+220&results=22",children:"0,10 RON \xd73"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.circuitbasics.com/how-to-use-breadboard-jumper-wires/",children:"Male-to-Male Jumper Wires"})}),(0,s.jsx)(t.td,{children:"Connections"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/fire-fire-mufate/890-set-fire-tata-tata-40p-30-cm.html?search_query=tata+tata&results=693",children:"7,98 RON"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.circuitbasics.com/how-to-use-breadboard-jumper-wires/",children:"Male-to-Female Jumper Wires"})}),(0,s.jsx)(t.td,{children:"Connections"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/toate-produsele/876-set-fire-mama-tata-10p-15-cm.html?search_query=jumper&results=70",children:"3,99 RON"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://howtomechatronics.com/tutorials/electronics/breadboard-power-supply-module/",children:"5V Breadboard Power Supply Module"})}),(0,s.jsx)(t.td,{children:"Power supply"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/electronica-de-putere-stabilizatoare-liniare/61-sursa-de-alimentare-pentru-breadboard.html",children:"4,69 RON"})})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"software",children:"Software"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Library"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Usage"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/embassy-rs/embassy",children:"embassy"})}),(0,s.jsx)(t.td,{children:"Asynchronous framework for embedded development in Rust"}),(0,s.jsx)(t.td,{children:"Used to handle GPIO events and multitasking"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/rp-rs/rp-hal",children:"rp2040-hal"})}),(0,s.jsx)(t.td,{children:"Hardware Abstraction Layer for Raspberry Pi RP2040 microcontrollers"}),(0,s.jsx)(t.td,{children:"Provides access to GPIO, ADC, PWM, and other peripherals"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/rust-embedded/embedded-hal",children:"embedded-hal"})}),(0,s.jsx)(t.td,{children:"Generic traits for embedded hardware abstraction"}),(0,s.jsx)(t.td,{children:"Interfaces with drivers like LEDs and buttons"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/knurling-rs/defmt",children:"defmt"})}),(0,s.jsx)(t.td,{children:"Lightweight logging crate for embedded systems"}),(0,s.jsx)(t.td,{children:"Debugging and formatted logging"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/probe-rs/probe-rs",children:"probe-rs"})}),(0,s.jsx)(t.td,{children:"Debug probe support for Rust-embedded development"}),(0,s.jsx)(t.td,{children:"Used to flash firmware and debug via the second Pico"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/japaric/heapless",children:"heapless"})}),(0,s.jsx)(t.td,{children:"Data structures without dynamic memory allocation"}),(0,s.jsx)(t.td,{children:"Used for storing note sequences in loop mode"})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"links",children:"Links"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://gurgleapps.com/learn/projects/diy-raspberrypi-pico-piano-project",children:"inspiration"})}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28700:(e,t,r)=>{r.d(t,{A:()=>i});const i=r.p+"assets/images/AMPdiagramaFINAL-a964c794bb474a49dc3ef3b866b8b244.webp"},68473:(e,t,r)=>{r.d(t,{A:()=>i});const i=r.p+"assets/images/KiCADscheme-066c49c605d3ff546864d79488ddc2c9.webp"},28453:(e,t,r)=>{r.d(t,{R:()=>n,x:()=>d});var i=r(96540);const s={},o=i.createContext(s);function n(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:n(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);