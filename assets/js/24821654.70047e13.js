"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2865],{62239:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"project/2025/ana_maria.duminica/index","title":"Musical Box","description":"A multi-instrument musical interaction system using gesture and touch.","source":"@site/versioned_docs/version-acs_cc/project/2025/ana_maria.duminica/index.md","sourceDirName":"project/2025/ana_maria.duminica","slug":"/project/2025/ana_maria.duminica/","permalink":"/docs/acs_cc/project/2025/ana_maria.duminica/","draft":false,"unlisted":false,"editUrl":"https://www.github.com/upb-pmrust/website/edit/main/website/versioned_docs/version-acs_cc/project/2025/ana_maria.duminica/index.md","tags":[],"version":"acs_cc","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Light Pattern Memory Game","permalink":"/docs/acs_cc/project/2025/ana_maria.bogdan/"},"next":{"title":"Alarm Clock","permalink":"/docs/acs_cc/project/2025/anastasia.luca/"}}');var s=i(74848),r=i(28453);const a={},d="Musical Box",c={},o=[{value:"Description",id:"description",level:2},{value:"Motivation",id:"motivation",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Log",id:"log",level:2},{value:"Week 5 - 11 May",id:"week-5---11-may",level:3},{value:"Week 12 - 18 May",id:"week-12---18-may",level:3},{value:"Week 19 - 25 May",id:"week-19---25-may",level:3},{value:"Hardware",id:"hardware",level:2},{value:"Schematics",id:"schematics",level:3},{value:"Bill of Materials",id:"bill-of-materials",level:3},{value:"Software",id:"software",level:2},{value:"Links",id:"links",level:2}];function l(e){const t={a:"a",admonition:"admonition",br:"br",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"musical-box",children:"Musical Box"})}),"\n",(0,s.jsx)(t.p,{children:"A multi-instrument musical interaction system using gesture and touch."}),"\n",(0,s.jsx)(t.admonition,{type:"info",children:(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Author:"})," Duminica Ana-Maria ",(0,s.jsx)(t.br,{}),"\n",(0,s.jsx)(t.strong,{children:"GitHub Repository:"})," ",(0,s.jsx)(t.a,{href:"https://github.com/UPB-PMRust-Students/proiect-Ana-MariaDuminica",children:"github.com/UPB-PMRust-Students/proiect-Ana-MariaDuminica"})]})}),"\n",(0,s.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,s.jsx)(t.p,{children:"Musical Box is an interactive embedded system that simulates a small music instrument station, allowing users to play piano notes, drums or guitar-like sounds using hand gestures or capacitive touch. A dedicated AutoPlay mode also plays a pre-programmed melody. The system uses a Raspberry Pi Pico, an ultrasonic sensor, capacitive touch sensors, RGB LEDs and a piezo buzzer, creating both audio and visual feedback."}),"\n",(0,s.jsx)(t.h2,{id:"motivation",children:"Motivation"}),"\n",(0,s.jsx)(t.p,{children:"Being passionate about music, I wanted to incorporate this personal interest into a technical project that would allow me to explore creativity through embedded systems.\nThis project offered the opportunity to design an interactive musical device by combining sensor input, real-time audio feedback and visual effects. It represents a blend of artistic expression and engineering and allowed me to apply and deepen my knowledge of embedded programming while creating something both functional and engaging."}),"\n",(0,s.jsx)(t.h2,{id:"architecture",children:"Architecture"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Architecture Diagram",src:i(79761).A+"",width:"560",height:"429"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Mode Manager"}),"\nThe central control component that handles input from buttons and switches between the four interaction modes (Piano, Drums, Guitar, AutoPlay).",(0,s.jsx)(t.br,{}),"\n",(0,s.jsx)(t.strong,{children:"Input Handler"}),"\nUnified interface that reads user interaction from different sensors, depending on the active mode (capacitive touches, gestures or distance sensing).",(0,s.jsx)(t.br,{}),"\n",(0,s.jsx)(t.strong,{children:"Sensor Controller"}),"\nGenerates musical output by translating inputs into tone frequencies. It handles note playback, percussive sounds and automatic melodies.",(0,s.jsx)(t.br,{}),"\n",(0,s.jsx)(t.strong,{children:"Visual Feedback Controller"}),"\nManages the RGB LED effects and synchronizes lighting animations with user input and active mode."]}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.strong,{children:"Input Handler"})," receives data from the physical interface (buttons, touchpads, sensors) and forwards it to the ",(0,s.jsx)(t.strong,{children:"Mode Manager"}),".",(0,s.jsx)(t.br,{}),"\n","The ",(0,s.jsx)(t.strong,{children:"Mode Manager"})," activates the corresponding logic for the selected mode (Piano, Drums, etc.).",(0,s.jsx)(t.br,{}),"\n","Based on the mode, the ",(0,s.jsx)(t.strong,{children:"Sound Controller"})," is triggered to play audio and the ",(0,s.jsx)(t.strong,{children:"Visual Feedback Controller"})," is triggered to animate lights.",(0,s.jsx)(t.br,{}),"\n","The architecture ensures that all input-output actions are synchronized and each mode operates independently but within the same event-driven structure."]}),"\n",(0,s.jsx)(t.h2,{id:"log",children:"Log"}),"\n",(0,s.jsx)(t.h3,{id:"week-5---11-may",children:"Week 5 - 11 May"}),"\n",(0,s.jsx)(t.h3,{id:"week-12---18-may",children:"Week 12 - 18 May"}),"\n",(0,s.jsx)(t.h3,{id:"week-19---25-may",children:"Week 19 - 25 May"}),"\n",(0,s.jsx)(t.h2,{id:"hardware",children:"Hardware"}),"\n",(0,s.jsx)(t.h3,{id:"schematics",children:"Schematics"}),"\n",(0,s.jsx)(t.h3,{id:"bill-of-materials",children:"Bill of Materials"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Device"}),(0,s.jsx)(t.th,{children:"Usage"}),(0,s.jsx)(t.th,{children:"Price"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Raspberry Pi Pico W (x2)"}),(0,s.jsx)(t.td,{children:"The microcontroller (main logic & debug probe)"}),(0,s.jsx)(t.td,{children:"60 RON"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Breadboard (x2)"}),(0,s.jsx)(t.td,{children:"Prototyping area for each Pico"}),(0,s.jsx)(t.td,{children:"15 RON"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Capacitive Touch Sensor TTP223"}),(0,s.jsx)(t.td,{children:"Detecting touch for interaction"}),(0,s.jsx)(t.td,{children:"5 RON"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Push Buttons (x3)"}),(0,s.jsx)(t.td,{children:"Manual input (mode switching, triggering sounds)"}),(0,s.jsx)(t.td,{children:"3 RON"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"WS2812B RGB LED Ring (24 LEDs)"}),(0,s.jsx)(t.td,{children:"Visual feedback and lighting effects"}),(0,s.jsx)(t.td,{children:"25 RON"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Piezoelectric Buzzer (x2)"}),(0,s.jsx)(t.td,{children:"Audio output for instruments"}),(0,s.jsx)(t.td,{children:"3 RON"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"HC-SR04 Ultrasonic Sensor"}),(0,s.jsx)(t.td,{children:"Gesture-based distance control (e.g., drums)"}),(0,s.jsx)(t.td,{children:"15 RON"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"MPR121 Touch Keypad Module"}),(0,s.jsx)(t.td,{children:"Piano input (capacitive keys)"}),(0,s.jsx)(t.td,{children:"10 RON"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Jumper Wires M-M"}),(0,s.jsx)(t.td,{children:"Connecting components on breadboards"}),(0,s.jsx)(t.td,{children:"20 RON"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Jumper Wires F-M (approx. 10)"}),(0,s.jsx)(t.td,{children:"For sensors/modules requiring different headers"}),(0,s.jsx)(t.td,{children:"20 RON"})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"software",children:"Software"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Library"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Usage"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"embassy-rp"}),(0,s.jsx)(t.td,{children:"HAL for Raspberry Pi Pico"}),(0,s.jsx)(t.td,{children:"Access to hardware peripherals (GPIO, PWM, I\xb2C, etc.)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"embassy-time"}),(0,s.jsx)(t.td,{children:"Async delays & timers"}),(0,s.jsx)(t.td,{children:"Used for non-blocking delays and timing"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"defmt + defmt-rtt"}),(0,s.jsx)(t.td,{children:"Embedded logging via RTT"}),(0,s.jsx)(t.td,{children:"Sending debug messages to the host"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"panic-probe"}),(0,s.jsx)(t.td,{children:"Minimal panic handler with logging"}),(0,s.jsx)(t.td,{children:"Displays panic messages through RTT"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"embedded-hal"}),(0,s.jsx)(t.td,{children:"Hardware Abstraction Layer traits"}),(0,s.jsx)(t.td,{children:"Interface for I\xb2C, PWM, and other peripheral drivers"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"smart-leds"}),(0,s.jsx)(t.td,{children:"WS2812 RGB LED control"}),(0,s.jsx)(t.td,{children:"Controls the RGB LED ring"})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"links",children:"Links"})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},79761:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/DIAGRAMA2-ab5933932f1a8462011588e489aa596f.webp"},28453:(e,t,i)=>{i.d(t,{R:()=>a,x:()=>d});var n=i(96540);const s={},r=n.createContext(s);function a(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);