"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9091],{46699:(e,r,i)=>{i.r(r),i.d(r,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>d,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"project/2025/andrei.salavastru/index","title":"Octane","description":"A Wi-Fi controlled RC car with a design inspired by Rocket League cars.","source":"@site/versioned_docs/version-fils_en/project/2025/andrei.salavastru/index.md","sourceDirName":"project/2025/andrei.salavastru","slug":"/project/2025/andrei.salavastru/","permalink":"/docs/fils_en/project/2025/andrei.salavastru/","draft":false,"unlisted":false,"editUrl":"https://www.github.com/upb-pmrust/website/edit/main/website/versioned_docs/version-fils_en/project/2025/andrei.salavastru/index.md","tags":[],"version":"fils_en","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Project Name","permalink":"/docs/fils_en/project/2025/andrei.profir/"},"next":{"title":"PicoPlay","permalink":"/docs/fils_en/project/2025/andrei.stefanescu04/"}}');var s=i(74848),n=i(28453);const d={},o="Octane",c={},a=[{value:"Description",id:"description",level:2},{value:"Motivation",id:"motivation",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Schematic Diagram",id:"schematic-diagram",level:3},{value:"ESP32-S2 Mini",id:"esp32-s2-mini",level:4},{value:"LAPTOP",id:"laptop",level:4},{value:"LEDs",id:"leds",level:4},{value:"MOTOR DRIVER ZKBM1",id:"motor-driver-zkbm1",level:4},{value:"DC MOTOR x2",id:"dc-motor-x2",level:4},{value:"BATTERY PACK x2",id:"battery-pack-x2",level:4},{value:"Log",id:"log",level:2},{value:"Week 5 - 11 May",id:"week-5---11-may",level:3},{value:"Week 12 - 18 May",id:"week-12---18-may",level:3},{value:"Week 19 - 25 May",id:"week-19---25-may",level:3},{value:"Hardware",id:"hardware",level:2},{value:"Schematics",id:"schematics",level:3},{value:"Bill of Materials",id:"bill-of-materials",level:3},{value:"Software",id:"software",level:2},{value:"Links",id:"links",level:2}];function l(e){const r={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"octane",children:"Octane"})}),"\n",(0,s.jsx)(r.p,{children:"A Wi-Fi controlled RC car with a design inspired by Rocket League cars."}),"\n",(0,s.jsxs)(r.admonition,{type:"info",children:[(0,s.jsx)(r.mdxAdmonitionTitle,{}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Author"}),": Salavastru Andrei ",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"GitHub Project Link"}),": ",(0,s.jsx)(r.a,{href:"https://github.com/UPB-PMRust-Students/project-AndreiSa05",children:"https://github.com/UPB-PMRust-Students/project-AndreiSa05"})]})]}),"\n",(0,s.jsx)(r.h2,{id:"description",children:"Description"}),"\n",(0,s.jsx)(r.p,{children:"Octane is a Wi-Fi controlled RC car powered entirely by an ESP32-S2 Mini. The car uses a motor driver to control two DC motors that handle both forward and backward movement. Users can control the car remotely by sending WASD commands over Wi-Fi from a browser interface. The ESP32-S2 receives these commands, interprets them, and drives the motors accordingly."}),"\n",(0,s.jsx)(r.h2,{id:"motivation",children:"Motivation"}),"\n",(0,s.jsx)(r.p,{children:"I chose this project because I\u2019ve always been curious about how RC cars work. As a child, I loved playing with them, but I never truly understood how they were built or controlled. This project gave me the opportunity to explore that curiosity hands-on \u2014 combining programming with real hardware to build something functional and fun."}),"\n",(0,s.jsx)(r.h2,{id:"architecture",children:"Architecture"}),"\n",(0,s.jsx)(r.h3,{id:"schematic-diagram",children:"Schematic Diagram"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.img,{alt:"Schematic diagram",src:i(95375).A+"",width:"818",height:"658"})}),"\n",(0,s.jsx)(r.h4,{id:"esp32-s2-mini",children:"ESP32-S2 Mini"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Role:"})," Serves as the central microcontroller for the car. It handles Wi-Fi communication, receives user input, processes that input, and controls the motors."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Connections:"})," GPIO pins display Wi-Fi connection status via LEDs, and some GPIO pins send PWM signals to the motor driver\u2019s enable pins."]}),"\n"]}),"\n",(0,s.jsx)(r.h4,{id:"laptop",children:"LAPTOP"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Role:"})," Acts as the remote control interface. Sends WASD movement commands over Wi-Fi to the ESP32-S2 Mini."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Connections:"})," Communicates with the ESP32-S2 via HTTP over a shared Wi-Fi network. The control interface is a web page."]}),"\n"]}),"\n",(0,s.jsx)(r.h4,{id:"leds",children:"LEDs"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Interface:"})," GPIO"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Role:"})," Show whether the ESP is connected to Wi-Fi."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Connections:"})," Each LED is connected to a GPIO pin. A 220\u03a9 resistor is placed between the GPIO and the LED to prevent damage."]}),"\n"]}),"\n",(0,s.jsx)(r.h4,{id:"motor-driver-zkbm1",children:"MOTOR DRIVER ZKBM1"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Interface:"})," PWM"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Role:"})," Controls the direction of the two DC motors based on the signals received from the ESP32-S2 Mini."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Connections:"})," The driver uses four GPIO pins from the ESP32-S2: IN1 and IN2 for Motor A, IN3 and IN4 for Motor B. Each motor\u2019s speed is adjusted using PWM signals, while direction is determined by the HIGH/LOW configuration of the control pins. The driver is powered directly from a battery pack connected to its VCC and GND terminals."]}),"\n"]}),"\n",(0,s.jsx)(r.h4,{id:"dc-motor-x2",children:"DC MOTOR x2"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Interface:"})," Powered through motor driver"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Role:"})," Provide movement for the car - forward and backward"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Connections:"})," Each motor is connected to one output channel of the ZKBM1 motor driver. They receive power and directional signals through these channels."]}),"\n"]}),"\n",(0,s.jsx)(r.h4,{id:"battery-pack-x2",children:"BATTERY PACK x2"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Interface:"})," Power supply"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Role:"})," Provides electrical power to both the motors and the ESP32-S2 system"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Connections:"})," A battery pack is connected to the VCC and GND inputs of the motor driver to power the motors, while the other is used to power the ESP32-S2 Mini."]}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"log",children:"Log"}),"\n",(0,s.jsx)(r.h3,{id:"week-5---11-may",children:"Week 5 - 11 May"}),"\n",(0,s.jsx)(r.h3,{id:"week-12---18-may",children:"Week 12 - 18 May"}),"\n",(0,s.jsx)(r.h3,{id:"week-19---25-may",children:"Week 19 - 25 May"}),"\n",(0,s.jsx)(r.h2,{id:"hardware",children:"Hardware"}),"\n",(0,s.jsx)(r.p,{children:"The Octane project is built around an ESP32-S2 Mini, which handles both Wi-Fi communication and motor control. User commands (WASD) are received via Wi-Fi and translated into PWM signals sent to a ZKBM1 motor driver. A pair of status LEDs connected to GPIO pins provide feedback, indicating the Wi-Fi connection status. The ZKBM1 controls two DC motors, enabling movement through GPIO pins. Power is supplied by two battery packs: one powers the motor driver, and the other powers the ESP32-S2 Mini. Thus, the setup allows for wireless control using a microcontroller."}),"\n",(0,s.jsx)(r.h3,{id:"schematics",children:"Schematics"}),"\n",(0,s.jsx)(r.p,{children:"Place your KiCAD schematics here."}),"\n",(0,s.jsx)(r.h3,{id:"bill-of-materials",children:"Bill of Materials"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Device"}),(0,s.jsx)(r.th,{children:"Usage"}),(0,s.jsx)(r.th,{children:"Price"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://electronix.ro/produs/placa-s2-mini-wifi-bazata-pe-esp32-s2fn4r2-esp32-s2-4mb-flash-2mb-psram/",children:"ESP32-S2 Mini"})}),(0,s.jsx)(r.td,{children:"Main microcontroller, handles Wi-Fi and motor control logic"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://electronix.ro/produs/placa-s2-mini-wifi-bazata-pe-esp32-s2fn4r2-esp32-s2-4mb-flash-2mb-psram/",children:"30.23 RON"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://www.aliexpress.com/item/1005003339586638.html",children:"Motor Driver ZKBM1"})}),(0,s.jsx)(r.td,{children:"Controls direction of two DC motors via PWM"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://www.aliexpress.com/item/1005003339586638.html",children:"18.16 RON"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://www.emag.ro/motor-dc-3v-ai284-s370/pd/DV0X44BBM/",children:"DC Motors x2"})}),(0,s.jsx)(r.td,{children:"Provide propulsion \u2014 forward, backward"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://www.emag.ro/motor-dc-3v-ai284-s370/pd/DV0X44BBM/",children:"7.84 RON"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://www.emag.ro/carcasa-cu-suport-si-conectori-cu-2-fire-pentru-doua-baterii-tip-aa-r6-din-plastic-negru-csc-2-aa/pd/DGX5NBMBM/?ref=embedding_similar_model_1_1&provider=rec&recid=rec_102_7872997ae108d1ecb78cdc72ca60392b41d18d7b0db60c74e34ad4a5536be491_1746301694&scenario_ID=102",children:"Battery Pack x2"})}),(0,s.jsx)(r.td,{children:"Powers the motor driver and ESP32"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://www.emag.ro/carcasa-cu-suport-si-conectori-cu-2-fire-pentru-doua-baterii-tip-aa-r6-din-plastic-negru-csc-2-aa/pd/DGX5NBMBM/?ref=embedding_similar_model_1_1&provider=rec&recid=rec_102_7872997ae108d1ecb78cdc72ca60392b41d18d7b0db60c74e34ad4a5536be491_1746301694&scenario_ID=102",children:"11.98 RON"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://electronix.ro/produs/fire-dupont-mama-mama-cu-jumper-wire-pentru-pcb-10-pini/",children:"Female-Female Wires x20 "})}),(0,s.jsx)(r.td,{children:"Connect components Female-Female"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://electronix.ro/produs/fire-dupont-mama-mama-cu-jumper-wire-pentru-pcb-10-pini/",children:"5.96 RON"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://electronix.ro/produs/fire-dupont-tata-tata-cu-jumper-wire-pentru-pcb-10-pini/",children:"Male-Male Wires x20"})}),(0,s.jsx)(r.td,{children:"Connect components Male-Male"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://electronix.ro/produs/fire-dupont-tata-tata-cu-jumper-wire-pentru-pcb-10-pini/",children:"7.54 RON"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://electronix.ro/produs/set-10-rezistori-220-ohm/",children:"220\u03a9 Resistors x10"})}),(0,s.jsx)(r.td,{children:"Used with LEDs to limit current"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://electronix.ro/produs/set-10-rezistori-220-ohm/",children:"3.37 RON"})})]})]})]}),"\n",(0,s.jsx)(r.h2,{id:"software",children:"Software"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Library"}),(0,s.jsx)(r.th,{children:"Description"}),(0,s.jsx)(r.th,{children:"Usage"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://crates.io/crates/esp-idf-sys",children:(0,s.jsx)(r.code,{children:"esp-idf-sys"})})}),(0,s.jsx)(r.td,{children:"Low-level bindings to the ESP-IDF"}),(0,s.jsx)(r.td,{children:"Provides access to ESP32 system APIs and runtime components"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://crates.io/crates/esp-idf-hal",children:(0,s.jsx)(r.code,{children:"esp-idf-hal"})})}),(0,s.jsx)(r.td,{children:"Hardware Abstraction Layer for ESP32 using ESP-IDF"}),(0,s.jsx)(r.td,{children:"Used for GPIO, PWM (via ledc) for motor and LED control"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://crates.io/crates/esp-idf-svc",children:(0,s.jsx)(r.code,{children:"esp-idf-svc"})})}),(0,s.jsx)(r.td,{children:"High-level service wrappers over ESP-IDF APIs"}),(0,s.jsx)(r.td,{children:"Used for managing Wi-Fi and networking"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://crates.io/crates/embedded-svc",children:(0,s.jsx)(r.code,{children:"embedded-svc"})})}),(0,s.jsx)(r.td,{children:"Traits and types for portable embedded services"}),(0,s.jsx)(r.td,{children:"Provides abstractions for networking, HTTP servers, and more"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://crates.io/crates/log",children:(0,s.jsx)(r.code,{children:"log"})})}),(0,s.jsx)(r.td,{children:"Standard Rust logging interface"}),(0,s.jsx)(r.td,{children:"Enables logging throughout the application"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://crates.io/crates/anyhow",children:(0,s.jsx)(r.code,{children:"anyhow"})})}),(0,s.jsx)(r.td,{children:"Error handling library"}),(0,s.jsx)(r.td,{children:"Simplifies error propagation and reporting"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://crates.io/crates/embuild",children:(0,s.jsx)(r.code,{children:"embuild"})})}),(0,s.jsxs)(r.td,{children:["Build-time support for ",(0,s.jsx)(r.code,{children:"esp-idf"})," projects"]}),(0,s.jsx)(r.td,{children:"Required for setting up and linking the ESP-IDF build system properly"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://doc.rust-lang.org/std/",children:(0,s.jsx)(r.code,{children:"std"})})}),(0,s.jsxs)(r.td,{children:["Rust standard library (enabled via ",(0,s.jsx)(r.code,{children:"esp-idf"}),")"]}),(0,s.jsxs)(r.td,{children:["Provides multithreading (",(0,s.jsx)(r.code,{children:"thread"}),"), networking (",(0,s.jsx)(r.code,{children:"TcpStream"}),", ",(0,s.jsx)(r.code,{children:"TcpListener"}),"), and synchronization (",(0,s.jsx)(r.code,{children:"Mutex"}),", ",(0,s.jsx)(r.code,{children:"Arc"}),") capabilities"]})]})]})]}),"\n",(0,s.jsx)(r.h2,{id:"links",children:"Links"}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"https://github.com/esp-rs/esp-template",children:"ESP Template"})}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},95375:(e,r,i)=>{i.d(r,{A:()=>t});const t=i.p+"assets/images/Schematics-c8bb6192d1690f9bc74fab837f4b38ab.webp"},28453:(e,r,i)=>{i.d(r,{R:()=>d,x:()=>o});var t=i(96540);const s={},n=t.createContext(s);function d(e){const r=t.useContext(n);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),t.createElement(n.Provider,{value:r},e.children)}}}]);