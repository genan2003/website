"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1804],{11862:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>a,contentTitle:()=>c,default:()=>o,frontMatter:()=>n,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"project/2025/denis_iulian.pavel/index","title":"Picogame RPG","description":"A turn based rpg implemeting sensors for special attacks on a pico 2w.","source":"@site/versioned_docs/version-fils_en/project/2025/denis_iulian.pavel/index.md","sourceDirName":"project/2025/denis_iulian.pavel","slug":"/project/2025/denis_iulian.pavel/","permalink":"/docs/fils_en/project/2025/denis_iulian.pavel/","draft":false,"unlisted":false,"editUrl":"https://www.github.com/upb-pmrust/website/edit/main/website/versioned_docs/version-fils_en/project/2025/denis_iulian.pavel/index.md","tags":[],"version":"fils_en","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Music Player","permalink":"/docs/fils_en/project/2025/delia_alexa.dragan/"},"next":{"title":"Pet Feeder","permalink":"/docs/fils_en/project/2025/diana.juverdeanu/"}}');var t=i(74848),d=i(28453);const n={},c="Picogame RPG",a={},l=[{value:"Description",id:"description",level:2},{value:"Motivation",id:"motivation",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Log",id:"log",level:2},{value:"Week 5 - 11 May",id:"week-5---11-may",level:3},{value:"Week 12 - 18 May",id:"week-12---18-may",level:3},{value:"Week 19 - 25 May",id:"week-19---25-may",level:3},{value:"Hardware",id:"hardware",level:2},{value:"Schematics",id:"schematics",level:3},{value:"Bill of Materials",id:"bill-of-materials",level:3},{value:"Software",id:"software",level:2}];function h(e){const s={a:"a",admonition:"admonition",br:"br",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"picogame-rpg",children:"Picogame RPG"})}),"\n",(0,t.jsx)(s.p,{children:"A turn based rpg implemeting sensors for special attacks on a pico 2w."}),"\n",(0,t.jsxs)(s.admonition,{type:"info",children:[(0,t.jsx)(s.mdxAdmonitionTitle,{}),(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Author"}),": Denis-Iulian Pavel ",(0,t.jsx)(s.br,{}),"\n",(0,t.jsx)(s.strong,{children:"GitHub Project Link"}),": ",(0,t.jsx)(s.a,{href:"https://github.com/UPB-PMRust-Students/project-denis-iulian-pavel",children:"https://github.com/UPB-PMRust-Students/project-denis-iulian-pavel"})]})]}),"\n",(0,t.jsx)(s.h2,{id:"description",children:"Description"}),"\n",(0,t.jsx)(s.p,{children:"My project will be a game coded completely in rust designed to run on a Pico 2W with 4 buttons (A, B, Special and Menu), a joystick for navigation, a tft screen, with sensors for special attacks (such as a light sensor or proximity sensor)"}),"\n",(0,t.jsx)(s.h2,{id:"motivation",children:"Motivation"}),"\n",(0,t.jsx)(s.p,{children:"I chose this project because I decided to implement a multiple features and utilize all aspects I've studied up until now in the lab, in rust on a microprocessor like the Pico 2W."}),"\n",(0,t.jsx)(s.h2,{id:"architecture",children:"Architecture"}),"\n",(0,t.jsx)(s.p,{children:"Raspberry Pi Pico 2W to:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"rgb_tft screen 128x160"}),"\n",(0,t.jsx)(s.li,{children:"A, B, Special, Start buttons"}),"\n",(0,t.jsx)(s.li,{children:"Joystick"}),"\n",(0,t.jsx)(s.li,{children:"buzzer"}),"\n",(0,t.jsx)(s.li,{children:"sensors (to be determined)"}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"log",children:"Log"}),"\n",(0,t.jsx)(s.h3,{id:"week-5---11-may",children:"Week 5 - 11 May"}),"\n",(0,t.jsx)(s.h3,{id:"week-12---18-may",children:"Week 12 - 18 May"}),"\n",(0,t.jsx)(s.h3,{id:"week-19---25-may",children:"Week 19 - 25 May"}),"\n",(0,t.jsx)(s.h2,{id:"hardware",children:"Hardware"}),"\n",(0,t.jsx)(s.p,{children:"Raspberry Pi Pico 2W, Buttons, Joystick, Screen (rgb_tft 128x160), sensors"}),"\n",(0,t.jsx)(s.h3,{id:"schematics",children:"Schematics"}),"\n",(0,t.jsx)(s.p,{children:"No schematic yet"}),"\n",(0,t.jsx)(s.h3,{id:"bill-of-materials",children:"Bill of Materials"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Device"}),(0,t.jsx)(s.th,{children:"Usage"}),(0,t.jsx)(s.th,{children:"Price"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://www.raspberrypi.com/products/raspberry-pi-pico-2/",children:"Raspberry Pi Pico 2W"})}),(0,t.jsx)(s.td,{children:"The main controller"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://www.optimusdigital.ro/ro/placi-raspberry-pi/13327-raspberry-pi-pico-2-w.html?search_query=pico+2w&results=33",children:"39.66 RON"})})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Electronic Components Kit"}),(0,t.jsx)(s.td,{children:"Basic Components"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://www.aliexpress.com/item/1005007636611675.html?spm=a2g0o.order_list.order_list_main.5.3bab1802f07p9F",children:"15.63 RON (SALE)"})})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"1.8-inch SPI TFT Module LCD Display"}),(0,t.jsx)(s.td,{children:"Screen"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://www.aliexpress.com/item/1005007174990368.html?spm=a2g0o.order_list.order_list_main.10.3bab1802f07p9F",children:"15.45 RON (SALE)"})})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Breadboard HQ (830 Puncte)"}),(0,t.jsx)(s.td,{children:"Extra Breadboard"}),(0,t.jsx)(s.td,{children:"9.98 RON (DELISTED)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Modul Joystick Biaxial Negru cu 5 pini"}),(0,t.jsx)(s.td,{children:"Navigation"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://www.optimusdigital.ro/ro/senzori-senzori-de-atingere/742-modul-joystick-ps2-biaxial-negru-cu-5-pini.html?search_query=joystick&results=40",children:"5.35 RON"})})]})]})]}),"\n",(0,t.jsx)(s.h2,{id:"software",children:"Software"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Library"}),(0,t.jsx)(s.th,{children:"Description"}),(0,t.jsx)(s.th,{children:"Usage"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://crates.io/crates/tinybmp",children:"tinybmp"})}),(0,t.jsx)(s.td,{children:"BMP image decoder for embedded environments"}),(0,t.jsx)(s.td,{children:"To decode BMP image files"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://crates.io/crates/embedded-text",children:"embedded-text"})}),(0,t.jsx)(s.td,{children:"Text rendering library for embedded-graphics"}),(0,t.jsx)(s.td,{children:"For rendering text on embedded graphics displays"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://github.com/embassy-rs/embassy",children:"embassy-embedded-hal"})}),(0,t.jsx)(s.td,{children:"Embedded HAL utilities with async support"}),(0,t.jsx)(s.td,{children:"Peripheral abstraction layer with async support"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://github.com/embassy-rs/embassy",children:"embassy-sync"})}),(0,t.jsx)(s.td,{children:"Synchronization primitives and data structures"}),(0,t.jsx)(s.td,{children:"Async-aware synchronization and data sharing"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://github.com/embassy-rs/embassy",children:"embassy-executor"})}),(0,t.jsx)(s.td,{children:"Async/await executor for embedded systems"}),(0,t.jsx)(s.td,{children:"Task executor with interrupt and thread support"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://github.com/embassy-rs/embassy",children:"embassy-futures"})}),(0,t.jsx)(s.td,{children:"Utilities for working with futures in no_std"}),(0,t.jsx)(s.td,{children:"Lightweight futures utilities without alloc"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://github.com/embassy-rs/embassy",children:"embassy-time"})}),(0,t.jsx)(s.td,{children:"Timekeeping and delays"}),(0,t.jsx)(s.td,{children:"Delays, timeouts, and scheduling"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://github.com/embassy-rs/embassy",children:"embassy-rp"})}),(0,t.jsx)(s.td,{children:"RP2040 HAL (Hardware Abstraction Layer)"}),(0,t.jsx)(s.td,{children:"Support for Raspberry Pi RP2040 microcontrollers"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://github.com/embassy-rs/embassy",children:"embassy-usb"})}),(0,t.jsx)(s.td,{children:"USB device support"}),(0,t.jsx)(s.td,{children:"Async USB device stack"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://crates.io/crates/fixed",children:"fixed"})}),(0,t.jsx)(s.td,{children:"Fixed-point number library"}),(0,t.jsx)(s.td,{children:"Fixed-point math operations"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://crates.io/crates/fixed-macro",children:"fixed-macro"})}),(0,t.jsx)(s.td,{children:"Macros for fixed-point numbers"}),(0,t.jsx)(s.td,{children:"Convenient fixed-point literals"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://crates.io/crates/serde",children:"serde"})}),(0,t.jsx)(s.td,{children:"Serialization/deserialization framework"}),(0,t.jsx)(s.td,{children:"JSON and data serialization"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://crates.io/crates/serde-json-core",children:"serde-json-core"})}),(0,t.jsx)(s.td,{children:"JSON support for no_std environments"}),(0,t.jsx)(s.td,{children:"JSON parsing/serialization in embedded systems"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://crates.io/crates/cortex-m-rt",children:"cortex-m-rt"})}),(0,t.jsx)(s.td,{children:"Cortex-M runtime support"}),(0,t.jsx)(s.td,{children:"Startup and runtime support for Cortex-M"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://crates.io/crates/embedded-graphics",children:"embedded-graphics"})}),(0,t.jsx)(s.td,{children:"2D graphics library for embedded systems"}),(0,t.jsx)(s.td,{children:"Drawing graphics on embedded displays"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://crates.io/crates/display-interface-spi",children:"display-interface-spi"})}),(0,t.jsx)(s.td,{children:"SPI interface for display drivers"}),(0,t.jsx)(s.td,{children:"Communicate with SPI-based displays"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://crates.io/crates/display-interface",children:"display-interface"})}),(0,t.jsx)(s.td,{children:"Display interface abstractions"}),(0,t.jsx)(s.td,{children:"Abstraction for display communication"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://crates.io/crates/mipidsi",children:"mipidsi"})}),(0,t.jsx)(s.td,{children:"Generic MIPI-DSI display driver"}),(0,t.jsx)(s.td,{children:"Driver for TFT displays"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://crates.io/crates/heapless",children:"heapless"})}),(0,t.jsx)(s.td,{children:"Heapless data structures"}),(0,t.jsx)(s.td,{children:"Fixed-capacity data structures"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://crates.io/crates/embedded-hal",children:"embedded-hal"})}),(0,t.jsx)(s.td,{children:"Hardware abstraction layer"}),(0,t.jsx)(s.td,{children:"Blocking hardware interface traits"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://crates.io/crates/embedded-hal-async",children:"embedded-hal-async"})}),(0,t.jsx)(s.td,{children:"Async embedded HAL traits"}),(0,t.jsx)(s.td,{children:"Async hardware interface traits"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://crates.io/crates/embedded-hal-bus",children:"embedded-hal-bus"})}),(0,t.jsx)(s.td,{children:"Bus sharing utilities"}),(0,t.jsx)(s.td,{children:"Utilities for sharing SPI/I2C buses"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://crates.io/crates/embedded-io-async",children:"embedded-io-async"})}),(0,t.jsx)(s.td,{children:"Async IO traits"}),(0,t.jsx)(s.td,{children:"Async read/write traits for embedded systems"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://crates.io/crates/static-cell",children:"static-cell"})}),(0,t.jsx)(s.td,{children:"Statically allocated runtime cell"}),(0,t.jsx)(s.td,{children:"Safe static initialization"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://crates.io/crates/embedded-storage",children:"embedded-storage"})}),(0,t.jsx)(s.td,{children:"Storage trait definitions"}),(0,t.jsx)(s.td,{children:"Traits for non-volatile storage"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://crates.io/crates/rand",children:"rand"})}),(0,t.jsx)(s.td,{children:"Random number generation"}),(0,t.jsx)(s.td,{children:"RNG utilities"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://crates.io/crates/byte-slice-cast",children:"byte-slice-cast"})}),(0,t.jsx)(s.td,{children:"Safely cast byte slices"}),(0,t.jsx)(s.td,{children:"Type-safe byte slice casting"})]})]})]})]})}function o(e={}){const{wrapper:s}={...(0,d.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},28453:(e,s,i)=>{i.d(s,{R:()=>n,x:()=>c});var r=i(96540);const t={},d=r.createContext(t);function n(e){const s=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:n(e.components),r.createElement(d.Provider,{value:s},e.children)}}}]);