"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9878],{44043:(e,r,d)=>{d.r(r),d.d(r,{assets:()=>c,contentTitle:()=>l,default:()=>o,frontMatter:()=>t,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"project/2025/carla_maria.rusu/index","title":"Audio Player with Raspberry Pi Pico 2W","description":"Audio player for headphones or devices with 3.5 jack.","source":"@site/versioned_docs/version-acs_cc/project/2025/carla_maria.rusu/index.md","sourceDirName":"project/2025/carla_maria.rusu","slug":"/project/2025/carla_maria.rusu/","permalink":"/docs/acs_cc/project/2025/carla_maria.rusu/","draft":false,"unlisted":false,"editUrl":"https://www.github.com/upb-pmrust/website/edit/main/website/versioned_docs/version-acs_cc/project/2025/carla_maria.rusu/index.md","tags":[],"version":"acs_cc","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Hand controlled Wi-Fi car","permalink":"/docs/acs_cc/project/2025/bogdan_florin.popa/"},"next":{"title":"Automatic Irrigation System","permalink":"/docs/acs_cc/project/2025/carmen.murarescu/"}}');var s=d(74848),n=d(28453);const t={},l="Audio Player with Raspberry Pi Pico 2W",c={},a=[{value:"Description",id:"description",level:2},{value:"Motivation",id:"motivation",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Components Overview",id:"components-overview",level:3},{value:"Interconnection",id:"interconnection",level:3},{value:"Diagram",id:"diagram",level:3},{value:"Log",id:"log",level:2},{value:"Week 5 - 11 May",id:"week-5---11-may",level:3},{value:"Week 12 - 18 May",id:"week-12---18-may",level:3},{value:"Week 19 - 25 May",id:"week-19---25-may",level:3},{value:"Hardware Design",id:"hardware-design",level:2},{value:"Hardware Description",id:"hardware-description",level:3},{value:"Schematic",id:"schematic",level:3},{value:"Bill of Materials",id:"bill-of-materials",level:3},{value:"Software",id:"software",level:2},{value:"Dependencies Overview",id:"dependencies-overview",level:3},{value:"Links",id:"links",level:2}];function h(e){const r={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",mermaid:"mermaid",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"audio-player-with-raspberry-pi-pico-2w",children:"Audio Player with Raspberry Pi Pico 2W"})}),"\n",(0,s.jsx)(r.p,{children:"Audio player for headphones or devices with 3.5 jack."}),"\n",(0,s.jsx)(r.admonition,{type:"info",children:(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Author"}),": Rusu Carla-Maria ",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"GitHub Project Link"}),": ",(0,s.jsx)(r.a,{href:"https://github.com/UPB-PMRust-Students/proiect-rusucarla",children:"link_to_github"})]})}),"\n",(0,s.jsx)(r.h2,{id:"description",children:"Description"}),"\n",(0,s.jsx)(r.p,{children:"This project implements a compact WAV audio player using the Raspberry Pi Pico 2W microcontroller.\nThe audio files are stored on a microSD card, read via SPI, and played through an I2S DAC (UDA1334A) connected to a 3.5mm headphone jack.\nThe user can use the push buttons and the rotary encoder to customize the experience."}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h2,{id:"motivation",children:"Motivation"}),"\n",(0,s.jsx)(r.p,{children:"The motivation for choosing this project was to explore embedded audio playback using Rust and Embassy on the Raspberry Pi Pico 2W.\nThe goal was to build a music player while learning low-level embedded I/O, SPI, I2S, and async execution using Rust."}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h2,{id:"architecture",children:"Architecture"}),"\n",(0,s.jsx)(r.h3,{id:"components-overview",children:"Components Overview"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Component"}),(0,s.jsx)(r.th,{children:"Responsibility"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Audio Handler"}),(0,s.jsx)(r.td,{children:"Reads WAV files and streams audio via I2S to the DAC"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"SPI Handler"}),(0,s.jsx)(r.td,{children:"Interfaces with the SD card to access audio files and with the LCD to display information"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"UI"}),(0,s.jsx)(r.td,{children:"Displays UI (e.g., file list, song name, progress)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Input Handler"}),(0,s.jsx)(r.td,{children:"Processes rotary encoder and buttons"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Playback Controller"}),(0,s.jsx)(r.td,{children:"Controls playback state (play/pause, skip, etc.)"})]})]})]}),"\n",(0,s.jsx)(r.h3,{id:"interconnection",children:"Interconnection"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Input Handler dictates the state of the Playback Controller"}),"\n",(0,s.jsx)(r.li,{children:"Playback Controller coordinates with Audio Manager and SPI Handler to stream audio."}),"\n",(0,s.jsx)(r.li,{children:"Audio Handler uses SPI Handler to get WAV file data."}),"\n",(0,s.jsx)(r.li,{children:"Playback Controller notifies UI to update the screen."}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"diagram",children:"Diagram"}),"\n",(0,s.jsx)(r.mermaid,{value:"graph TD\n    InputHandler[Input Handler - Buttons & Encoder]\n    PlaybackController[Playback Controller]\n    AudioHandler[Audio Manager]\n    SPIHandler[SPI Handler - SD & LCD Access]\n    UI[UI]\n\n    InputHandler --\x3e PlaybackController\n    PlaybackController --\x3e AudioHandler\n    AudioHandler --\x3e SPIHandler\n    PlaybackController --\x3e UI"}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h2,{id:"log",children:"Log"}),"\n",(0,s.jsx)(r.h3,{id:"week-5---11-may",children:"Week 5 - 11 May"}),"\n",(0,s.jsx)(r.h3,{id:"week-12---18-may",children:"Week 12 - 18 May"}),"\n",(0,s.jsx)(r.h3,{id:"week-19---25-may",children:"Week 19 - 25 May"}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h2,{id:"hardware-design",children:"Hardware Design"}),"\n",(0,s.jsx)(r.h3,{id:"hardware-description",children:"Hardware Description"}),"\n",(0,s.jsx)(r.p,{children:"The following hardware was used:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Raspberry Pi Pico 2W"}),"\n",(0,s.jsx)(r.li,{children:"UDA1334A I2S DAC with 3.5mm jack socket"}),"\n",(0,s.jsx)(r.li,{children:"LCD with built-in SD slot (will see if this is the best option)"}),"\n",(0,s.jsx)(r.li,{children:"Rotary Encoder"}),"\n",(0,s.jsx)(r.li,{children:"3 push buttons"}),"\n",(0,s.jsx)(r.li,{children:"Breadboards and jumper wires"}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"schematic",children:"Schematic"}),"\n",(0,s.jsx)(r.p,{children:"Tried to do something in Kicad (not for dark mode)"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.img,{alt:"alt text",src:d(18209).A+"",width:"1123",height:"794"})}),"\n",(0,s.jsx)(r.h3,{id:"bill-of-materials",children:"Bill of Materials"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Item"}),(0,s.jsx)(r.th,{children:"Quantity"}),(0,s.jsx)(r.th,{children:"Unit Price (RON)"}),(0,s.jsx)(r.th,{children:"Total (RON)"}),(0,s.jsx)(r.th,{children:"Usage"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Raspberry Pi Pico 2W"}),(0,s.jsx)(r.td,{children:"1"}),(0,s.jsx)(r.td,{children:"39.66"}),(0,s.jsx)(r.td,{children:"39.66"}),(0,s.jsx)(r.td,{children:"Main controller"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Raspberry Pi Pico (debug / Picoprobe)"}),(0,s.jsx)(r.td,{children:"1"}),(0,s.jsx)(r.td,{children:"39.66"}),(0,s.jsx)(r.td,{children:"39.66"}),(0,s.jsx)(r.td,{children:"Used for SWD debugging"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"UDA1334A I2S DAC Module"}),(0,s.jsx)(r.td,{children:"1"}),(0,s.jsx)(r.td,{children:"56.76"}),(0,s.jsx)(r.td,{children:"56.76"}),(0,s.jsx)(r.td,{children:"Audio output module"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:'LCD SPI Display 1.8" (128x160) with SD slot'}),(0,s.jsx)(r.td,{children:"1"}),(0,s.jsx)(r.td,{children:"28.99"}),(0,s.jsx)(r.td,{children:"28.99"}),(0,s.jsx)(r.td,{children:"Used for UI and SD (via SPI)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Push Button (white round cap)"}),(0,s.jsx)(r.td,{children:"3"}),(0,s.jsx)(r.td,{children:"1.99"}),(0,s.jsx)(r.td,{children:"5.97"}),(0,s.jsx)(r.td,{children:"Controls"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Rotary Encoder Module"}),(0,s.jsx)(r.td,{children:"1"}),(0,s.jsx)(r.td,{children:"4.99"}),(0,s.jsx)(r.td,{children:"4.99"}),(0,s.jsx)(r.td,{children:"Controls"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"10k Stereo Potentiometer"}),(0,s.jsx)(r.td,{children:"1"}),(0,s.jsx)(r.td,{children:"1.99"}),(0,s.jsx)(r.td,{children:"1.99"}),(0,s.jsx)(r.td,{children:"Analog Control (ADC input)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Breadboard HQ (830 points)"}),(0,s.jsx)(r.td,{children:"2"}),(0,s.jsx)(r.td,{children:"9.98"}),(0,s.jsx)(r.td,{children:"19.96"}),(0,s.jsx)(r.td,{children:"For main Pico + Picoprobe wiring"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Header pins (2.54 mm, 40p)"}),(0,s.jsx)(r.td,{children:"2"}),(0,s.jsx)(r.td,{children:"0.99"}),(0,s.jsx)(r.td,{children:"1.98"}),(0,s.jsx)(r.td,{children:"For soldering Pico and accessories"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Female Breakable Header (40p)"}),(0,s.jsx)(r.td,{children:"1"}),(0,s.jsx)(r.td,{children:"2.56"}),(0,s.jsx)(r.td,{children:"2.56"}),(0,s.jsx)(r.td,{children:"Extra connectivity (LCD/SD)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Breadboard rigid wires"}),(0,s.jsx)(r.td,{children:"1"}),(0,s.jsx)(r.td,{children:"12.49"}),(0,s.jsx)(r.td,{children:"12.49"}),(0,s.jsx)(r.td,{children:"Neat wiring on breadboard"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Breadboard jumper wires"}),(0,s.jsx)(r.td,{children:"1"}),(0,s.jsx)(r.td,{children:"7.99"}),(0,s.jsx)(r.td,{children:"7.99"}),(0,s.jsx)(r.td,{children:"General-purpose jumpers"})]})]})]}),"\n",(0,s.jsx)(r.p,{children:"Total Estimated Cost: 229.60 RON (for now)"}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h2,{id:"software",children:"Software"}),"\n",(0,s.jsx)(r.p,{children:"To-do : complete later when I've finished"}),"\n",(0,s.jsx)(r.h3,{id:"dependencies-overview",children:"Dependencies Overview"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Library"}),(0,s.jsx)(r.th,{children:"Description"}),(0,s.jsx)(r.th,{children:"Usage"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://github.com/embassy-rs/embassy",children:"embassy"})}),(0,s.jsx)(r.td,{children:"Async embedded framework"}),(0,s.jsx)(r.td,{children:"Core runtime for async tasks and peripherals"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://github.com/embassy-rs/embassy",children:"embassy-rp"})}),(0,s.jsx)(r.td,{children:"HAL for Raspberry Pi Pico (RP2040)"}),(0,s.jsx)(r.td,{children:"Controls GPIOs, SPI, I2S, etc."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://github.com/embedded-graphics/embedded-graphics",children:"embedded-graphics"})}),(0,s.jsx)(r.td,{children:"2D graphics library"}),(0,s.jsx)(r.td,{children:"Used for drawing text and shapes on LCD"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://github.com/almindor/mipidsi",children:"mipidsi"})}),(0,s.jsx)(r.td,{children:"Generic MIPI DSI display driver"}),(0,s.jsx)(r.td,{children:"Driver for ST7735 LCD"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://github.com/almindor/display-interface",children:"display-interface-spi"})}),(0,s.jsx)(r.td,{children:"SPI display abstraction"}),(0,s.jsx)(r.td,{children:"Connects the embedded-graphics to SPI-based displays"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://github.com/rust-embedded-community/embedded-sdmmc-rs",children:"embedded-sdmmc"})}),(0,s.jsx)(r.td,{children:"FAT filesystem over SD card"}),(0,s.jsxs)(r.td,{children:["Used to read ",(0,s.jsx)(r.code,{children:".wav"})," files from SD card"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://github.com/rust-embedded/embedded-hal",children:"embedded-hal"})}),(0,s.jsx)(r.td,{children:"Traits for embedded devices"}),(0,s.jsx)(r.td,{children:"Base for SPI, I2S, ADC, GPIO, etc."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://github.com/knurling-rs/defmt",children:"defmt"})}),(0,s.jsx)(r.td,{children:"Logging crate for embedded"}),(0,s.jsx)(r.td,{children:"For debugging and structured logs"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://github.com/NeoBirth/micromath",children:"micromath"})}),(0,s.jsx)(r.td,{children:"Lightweight math functions"}),(0,s.jsx)(r.td,{children:"Used for simulations of sound waves"})]})]})]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h2,{id:"links",children:"Links"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"https://github.com/embassy-rs/embassy/tree/93ff90db04f06316f0992b65a0319ebdf74ce5c4/embassy-rp/src/pio_programs",children:"PIO Programs"})," : Helped me with drivers for I2S and Rotary Encoder"]}),"\n"]})]})}function o(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},18209:(e,r,d)=>{d.d(r,{A:()=>i});const i=d.p+"assets/images/Audio_Player-56aecd65890607b1f36e30a8e2876d4b.svg"},28453:(e,r,d)=>{d.d(r,{R:()=>t,x:()=>l});var i=d(96540);const s={},n=i.createContext(s);function t(e){const r=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),i.createElement(n.Provider,{value:r},e.children)}}}]);