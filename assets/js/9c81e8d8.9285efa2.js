"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2441],{8239:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>d,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"project/2025/alexandra.diaconu03/index","title":"2048 game","description":"Implementation of the famous game 2048.","source":"@site/versioned_docs/version-acs_cc/project/2025/alexandra.diaconu03/index.md","sourceDirName":"project/2025/alexandra.diaconu03","slug":"/project/2025/alexandra.diaconu03/","permalink":"/docs/acs_cc/project/2025/alexandra.diaconu03/","draft":false,"unlisted":false,"editUrl":"https://www.github.com/upb-pmrust/website/edit/main/website/versioned_docs/version-acs_cc/project/2025/alexandra.diaconu03/index.md","tags":[],"version":"acs_cc","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Automatic feeder for animals","permalink":"/docs/acs_cc/project/2025/alessia.lazar/"},"next":{"title":"Automated Plant Watering System","permalink":"/docs/acs_cc/project/2025/alexandra.manolache/"}}');var t=i(74848),r=i(28453);const d={},a="2048 game",l={},c=[{value:"Description",id:"description",level:2},{value:"Motivation",id:"motivation",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Log",id:"log",level:2},{value:"Week  -  May",id:"week-----may",level:3},{value:"Week  -  May",id:"week-----may-1",level:3},{value:"Week  -  May",id:"week-----may-2",level:3},{value:"Hardware",id:"hardware",level:2},{value:"Schematics",id:"schematics",level:3},{value:"Bill of Materials",id:"bill-of-materials",level:3},{value:"Software",id:"software",level:2},{value:"Links",id:"links",level:2}];function o(e){const s={a:"a",admonition:"admonition",br:"br",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"2048-game",children:"2048 game"})}),"\n",(0,t.jsx)(s.p,{children:"Implementation of the famous game 2048."}),"\n",(0,t.jsxs)(s.admonition,{type:"info",children:[(0,t.jsx)(s.mdxAdmonitionTitle,{}),(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Author"}),": Diaconu Alexandra-Ioana ",(0,t.jsx)(s.br,{}),"\n",(0,t.jsx)(s.strong,{children:"GitHub Project Link"}),": ",(0,t.jsx)(s.a,{href:"https://github.com/UPB-PMRust-Students/proiect-AlexDia10",children:"https://github.com/UPB-PMRust-Students/proiect-AlexDia10"})]})]}),"\n",(0,t.jsx)(s.h2,{id:"description",children:"Description"}),"\n",(0,t.jsx)(s.p,{children:"The project consists of an implementation of the famous game 2048. The goal of the game is to reach the value 2048 by combining powers of 2 on a 4x4 board (classic mode). The player combines numbered tiles by moving up, down, left and right, using physical buttons. The game runs on a Raspberry Pi Pico 2 and is displayed on a color LCD."}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"The system utilizes five buttons for the gameplay: up, down, left, right and reset."}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"The LCD screen showcases the grid and the numbered tiles."}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"A buzzer that makes a sound when a milestone is reached."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"motivation",children:"Motivation"}),"\n",(0,t.jsxs)(s.p,{children:["As a kid, I loved playing simple, clever games like 2048, fascinated by how such a basic concept could be so addictive and satisfying. That experience stuck with me and inspired this project: ",(0,t.jsx)(s.strong,{children:"building my own version of 2048 from scratch."})]}),"\n",(0,t.jsx)(s.p,{children:"While planning the system \u2014 from managing inputs to handling graphics and game logic \u2014 I realized it\u2019s more than just code. It\u2019s also about creating a smooth, engaging experience, which taps into my love for design and user interaction."}),"\n",(0,t.jsx)(s.h2,{id:"architecture",children:"Architecture"}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.strong,{children:"Raspberry Pi Pico 2W"})," serves as the central control unit, directing and managing all other components utilized within the project."]}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.strong,{children:"LCD"})," serves as an interface for showcasing the grid and numbered tiles, it is connected to the Pico through SPI"]}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.strong,{children:"buttons"})," act as the primary input method, they are connected directly to the Pico's GPIO pins"]}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.strong,{children:"buzzer"})," emits sound cues for actions and is connected to a GPIO pin"]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.img,{alt:"diagrama",src:i(87984).A+""})}),"\n",(0,t.jsx)(s.h2,{id:"log",children:"Log"}),"\n",(0,t.jsx)(s.h3,{id:"week-----may",children:"Week  -  May"}),"\n",(0,t.jsx)(s.h3,{id:"week-----may-1",children:"Week  -  May"}),"\n",(0,t.jsx)(s.h3,{id:"week-----may-2",children:"Week  -  May"}),"\n",(0,t.jsx)(s.h2,{id:"hardware",children:"Hardware"}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Raspberry Pi Pico 2W"}),":"]}),"\n"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Purpose"}),": Controls all components."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Function"}),": Acts as the main controller, coordinating the operations of buttons, buzzer, and the LCD display."]}),"\n"]}),"\n",(0,t.jsxs)(s.ol,{start:"2",children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"LCD Display"}),":"]}),"\n"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Purpose"}),": Displays the grid and numbered tiles of the 2048 game."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Function"}),": Provides a visual interface for the user, updating the display dynamically as the user moves the tiles and merges them."]}),"\n"]}),"\n",(0,t.jsxs)(s.ol,{start:"3",children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Buttons"}),":"]}),"\n"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Purpose"}),": Serve as the user input method for controlling the game."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Function"}),": Allow the player to move tiles in four directions (Up, Down, Left, Right) and reset the game."]}),"\n"]}),"\n",(0,t.jsxs)(s.ol,{start:"4",children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Buzzer"}),":"]}),"\n"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Purpose"}),": Provide auditory feedback during gameplay."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Function"}),": Emits sound cues for actions such as tile merges, successful moves, or game over."]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"schematics",children:"Schematics"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.img,{alt:"schematic",src:i(60483).A+"",width:"1123",height:"794"})}),"\n",(0,t.jsx)(s.h3,{id:"bill-of-materials",children:"Bill of Materials"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Device"}),(0,t.jsx)(s.th,{children:"Usage"}),(0,t.jsx)(s.th,{children:"Price"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://datasheets.raspberrypi.com/picow/pico-2-w-datasheet.pdf",children:"Raspberry Pi Pico 2W"})}),(0,t.jsx)(s.td,{children:"The microcontroller"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://www.optimusdigital.ro/en/raspberry-pi-boards/13327-raspberry-pi-pico-2-w.html",children:"39,66 RON"})})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"http://www.lcdwiki.com/res/MSP1443/1.44inch_SPI_Module_MSP1443_User_Manual_EN.pdf",children:"LCD Display"})}),(0,t.jsx)(s.td,{children:"LCD Display"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://www.optimusdigital.ro/en/lcds/870-144-lcd-module-128x128-px-red.html",children:"27,99 RON"})})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Buttons"}),(0,t.jsx)(s.td,{children:"Push Buttons"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://www.optimusdigital.ro/en/buttons-and-switches/1119-6x6x6-push-button.html",children:"5 x 0,36 RON"})})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Buzzer"}),(0,t.jsx)(s.td,{children:"Active Buzzer"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://www.optimusdigital.ro/en/buzzers/635-3v-active-buzzer.html",children:"0,99 RON"})})]})]})]}),"\n",(0,t.jsx)(s.h2,{id:"software",children:"Software"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Library"}),(0,t.jsx)(s.th,{children:"Description"}),(0,t.jsx)(s.th,{children:"Usage"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://github.com/embassy-rs/embassy/tree/main/embassy-rp",children:"embassy-rp"})}),(0,t.jsx)(s.td,{children:"RP2040 Peripherals"}),(0,t.jsx)(s.td,{children:"Used for accessing the peripherals"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://github.com/rust-embedded/cortex-m-rt",children:"cortex-m-rt"})}),(0,t.jsx)(s.td,{children:"Runtime support for Cortex-M devices"}),(0,t.jsx)(s.td,{children:"Initializes the microcontroller and defines the entry point"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://github.com/rp-rs/rp-hal",children:"rp2040-hal"})}),(0,t.jsx)(s.td,{children:"Hardware Abstraction Layer for RP2040"}),(0,t.jsx)(s.td,{children:"Enables low-level control over GPIO, SPI, PWM, etc."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://github.com/rust-embedded/embedded-hal",children:"embedded-hal"})}),(0,t.jsx)(s.td,{children:"Hardware abstraction traits for embedded devices"}),(0,t.jsx)(s.td,{children:"Provides standard interfaces for hardware components like digital input/output"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://github.com/almindor/embedded-input",children:"embedded-input"})}),(0,t.jsx)(s.td,{children:"Input abstraction for embedded devices"}),(0,t.jsx)(s.td,{children:"Simplifies button handling and debounce logic"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://github.com/almindor/st7735-lcd",children:"st7735-lcd"})}),(0,t.jsx)(s.td,{children:"Driver for ST7735 displays over SPI"}),(0,t.jsx)(s.td,{children:"Sends display commands and data to the LCD"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://github.com/embedded-graphics/embedded-graphics",children:"embedded-graphics"})}),(0,t.jsx)(s.td,{children:"2D graphics library for embedded devices"}),(0,t.jsx)(s.td,{children:"Renders text, shapes, and tiles on the LCD screen"})]})]})]}),"\n",(0,t.jsx)(s.h2,{id:"links",children:"Links"})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},87984:(e,s,i)=>{i.d(s,{A:()=>n});const n=i.p+"assets/images/diagrama-ab48107a1d2d58606e2f5ac04a02f6b5.svg"},60483:(e,s,i)=>{i.d(s,{A:()=>n});const n=i.p+"assets/images/schematic-9719cb1e0b414defe338aef61bd57668.svg"},28453:(e,s,i)=>{i.d(s,{R:()=>d,x:()=>a});var n=i(96540);const t={},r=n.createContext(t);function d(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);