"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2524],{95537:(e,i,r)=>{r.r(i),r.d(i,{assets:()=>o,contentTitle:()=>l,default:()=>a,frontMatter:()=>d,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"project/2025/andrei.pitic/index","title":"Project Name","description":"3x3 SLOTS MACHINE","source":"@site/versioned_docs/version-fils_en/project/2025/andrei.pitic/index.md","sourceDirName":"project/2025/andrei.pitic","slug":"/project/2025/andrei.pitic/","permalink":"/docs/fils_en/project/2025/andrei.pitic/","draft":false,"unlisted":false,"editUrl":"https://www.github.com/upb-pmrust/website/edit/main/website/versioned_docs/version-fils_en/project/2025/andrei.pitic/index.md","tags":[],"version":"fils_en","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"DriveSight","permalink":"/docs/fils_en/project/2025/andrei.neagu1910/"},"next":{"title":"Project Name","permalink":"/docs/fils_en/project/2025/andrei.profir/"}}');var n=r(74848),t=r(28453);const d={},l="Project Name",o={},c=[{value:"Description",id:"description",level:2},{value:"Motivation",id:"motivation",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Log",id:"log",level:2},{value:"Week 5 - 11 May",id:"week-5---11-may",level:3},{value:"Week 12 - 18 May",id:"week-12---18-may",level:3},{value:"Week 19 - 25 May",id:"week-19---25-may",level:3},{value:"Hardware",id:"hardware",level:2},{value:"Schematics",id:"schematics",level:3},{value:"Bill of Materials",id:"bill-of-materials",level:3},{value:"Software",id:"software",level:2},{value:"Links",id:"links",level:2}];function h(e){const i={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.header,{children:(0,n.jsx)(i.h1,{id:"project-name",children:"Project Name"})}),"\n",(0,n.jsx)(i.p,{children:"3x3 SLOTS MACHINE"}),"\n",(0,n.jsx)(i.admonition,{type:"info",children:(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"Author"}),": Pitic Andrei ",(0,n.jsx)(i.br,{}),"\n",(0,n.jsx)(i.strong,{children:"GitHub Project Link"}),":  ",(0,n.jsx)(i.a,{href:"https://github.com/UPB-PMRust-Students/project-Pitic888",children:"https://github.com/UPB-PMRust-Students/project-Pitic888"})]})}),"\n",(0,n.jsx)(i.h2,{id:"description",children:"Description"}),"\n",(0,n.jsx)(i.p,{children:"This project implements a classic 3x3 slot machine game using Rust, designed to run on a Raspberry Pi Pico 2W with a connected ST7789 display. The player presses a button to spin the reels, and the system randomly generates and displays symbols on a 3x3 grid. If the player lands matching combinations, they win points or they can risk them in a double or nothing minigame. The project also includes simple animations and sound effects to enhance the experience."}),"\n",(0,n.jsx)(i.h2,{id:"motivation",children:"Motivation"}),"\n",(0,n.jsx)(i.p,{children:"The slot machine is a fun, interactive project that allows me to work with hardware (display, buttons, possibly a buzzer) and learn more about random number generation, graphics rendering, and game design on microcontrollers. It\u2019s also a great opportunity to explore how Rust works in constrained environments."}),"\n",(0,n.jsx)(i.h2,{id:"architecture",children:"Architecture"}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.strong,{children:"Main Components:"})}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"Game Logic Module"}),(0,n.jsx)(i.br,{}),"\n","Handles the core slot machine logic: spinning, random symbol generation, win condition checks, and score tracking."]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"Display Module"}),(0,n.jsx)(i.br,{}),"\n","Uses the ",(0,n.jsx)(i.code,{children:"st7789"})," and ",(0,n.jsx)(i.code,{children:"embedded-graphics"})," libraries to render the 3x3 grid, symbols, animations, and text."]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"Input Module"}),(0,n.jsx)(i.br,{}),"\n","Reads button presses from GPIO pins to trigger the spin."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(i.p,{children:["-- ",(0,n.jsx)(i.strong,{children:"Sound Module"}),(0,n.jsx)(i.br,{}),"\n","Uses the Arduino TPA3118 audio amplifier to play sound effects for spins, wins, losses, and the minigame."]}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"Memory Module"}),(0,n.jsx)(i.br,{}),"\n","Uses the EEPROM AT24C256 to store high scores and possibly settings."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"Flow:"}),(0,n.jsx)(i.br,{}),"\n","Input (button press) \u2192 Game Logic \u2192 Display Update \u2192 (Optional) Sound Output"]}),"\n",(0,n.jsx)(i.h2,{id:"log",children:"Log"}),"\n",(0,n.jsx)(i.h3,{id:"week-5---11-may",children:"Week 5 - 11 May"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"Set up the Rust development environment for Raspberry Pi Pico 2W"}),"\n",(0,n.jsxs)(i.li,{children:["Created the project repository and initialized dependencies (",(0,n.jsx)(i.code,{children:"st7789"}),", ",(0,n.jsx)(i.code,{children:"embedded-graphics"}),")"]}),"\n",(0,n.jsx)(i.li,{children:"Designed basic slot machine logic (reels, spin, random generation, double or nothing feature )"}),"\n"]}),"\n",(0,n.jsx)(i.h3,{id:"week-12---18-may",children:"Week 12 - 18 May"}),"\n",(0,n.jsx)(i.h3,{id:"week-19---25-may",children:"Week 19 - 25 May"}),"\n",(0,n.jsx)(i.h2,{id:"hardware",children:"Hardware"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"Raspberry Pi Pico W as the main controller"}),"\n",(0,n.jsx)(i.li,{children:"2.4-inch Arduino LCD for displaying the slot grid and game information"}),"\n",(0,n.jsx)(i.li,{children:"Arduino Audio Mono Amplifier TPA3118 for sound effects through a speaker"}),"\n",(0,n.jsx)(i.li,{children:"EEPROM Module AT24C256 for saving high scores or settings"}),"\n",(0,n.jsx)(i.li,{children:"Breadboard kit for prototyping the circuit"}),"\n",(0,n.jsx)(i.li,{children:"10 k\u03a9 resistor for pull-ups or signal conditioning"}),"\n",(0,n.jsx)(i.li,{children:"Three pushbuttons for user input: spin, reset, and possibly menu navigation"}),"\n"]}),"\n",(0,n.jsx)(i.h3,{id:"schematics",children:"Schematics"}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.img,{alt:"Circuit diagram for the 3x3 Slots Machine showing connections between Raspberry Pi Pico W, display, buttons, and other components",src:r(9914).A+"",width:"1000",height:"700"})}),"\n",(0,n.jsx)(i.h3,{id:"bill-of-materials",children:"Bill of Materials"}),"\n",(0,n.jsxs)(i.table,{children:[(0,n.jsx)(i.thead,{children:(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.th,{children:"Device"}),(0,n.jsx)(i.th,{children:"Usage"}),(0,n.jsx)(i.th,{children:"Price"})]})}),(0,n.jsxs)(i.tbody,{children:[(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"https://www.optimusdigital.ro/en/raspberry-pi-boards/12394-raspberry-pi-pico-w.html",children:"Raspberry Pi Pico W"})}),(0,n.jsx)(i.td,{children:"The microcontroller"}),(0,n.jsx)(i.td,{children:"~40 RON"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"https://www.optimusdigital.ro",children:"2.4-inch Arduino LCD"})}),(0,n.jsx)(i.td,{children:"Display for grid and symbols"}),(0,n.jsx)(i.td,{children:"~40 RON"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"https://www.optimusdigital.ro",children:"Arduino Audio Mono Amplifier TPA3118"})}),(0,n.jsx)(i.td,{children:"Drives speaker for sound effects"}),(0,n.jsx)(i.td,{children:"~20 RON"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"https://www.optimusdigital.ro",children:"EEPROM Module AT24C256"})}),(0,n.jsx)(i.td,{children:"Stores high scores or settings"}),(0,n.jsx)(i.td,{children:"~9 RON"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"https://www.optimusdigital.ro",children:"Breadboard Kit"})}),(0,n.jsx)(i.td,{children:"Prototyping platform"}),(0,n.jsx)(i.td,{children:"~22 RON"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"https://www.optimusdigital.ro",children:"10 k\u03a9 Resistor"})}),(0,n.jsx)(i.td,{children:"Pull-ups or signal conditioning"}),(0,n.jsx)(i.td,{children:"~3 RON"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"https://www.optimusdigital.ro",children:"Pushbuttons (x3)"})}),(0,n.jsx)(i.td,{children:"User input for spin, reset, etc."}),(0,n.jsx)(i.td,{children:"~\u2014 RON"})]})]})]}),"\n",(0,n.jsx)(i.h2,{id:"software",children:"Software"}),"\n",(0,n.jsxs)(i.table,{children:[(0,n.jsx)(i.thead,{children:(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.th,{children:"Library"}),(0,n.jsx)(i.th,{children:"Description"}),(0,n.jsx)(i.th,{children:"Usage"})]})}),(0,n.jsxs)(i.tbody,{children:[(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"https://github.com/almindor/st7789",children:"st7789"})}),(0,n.jsx)(i.td,{children:"Display driver for ST7789 or compatible LCDs"}),(0,n.jsx)(i.td,{children:"Used to drive the 2.4-inch Arduino LCD display"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"https://github.com/embedded-graphics/embedded-graphics",children:"embedded-graphics"})}),(0,n.jsx)(i.td,{children:"2D graphics library"}),(0,n.jsx)(i.td,{children:"Draws the slot grid, symbols, text, and minigame UI"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"https://docs.rs/rand/latest/rand/",children:"rand"})}),(0,n.jsx)(i.td,{children:"Random number generation"}),(0,n.jsx)(i.td,{children:"Generates random spins and randomizes the correct button in the minigame"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"https://github.com/rp-rs/rp-hal",children:"rp-pico"})}),(0,n.jsx)(i.td,{children:"Raspberry Pi Pico HAL"}),(0,n.jsx)(i.td,{children:"Accesses GPIO, SPI, I\xb2C, and other hardware features"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"https://github.com/eldruin/at24c256",children:"at24c256 driver"})}),(0,n.jsx)(i.td,{children:"EEPROM driver"}),(0,n.jsx)(i.td,{children:"Stores high scores or player settings in the AT24C256 EEPROM"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"https://github.com/rp-rs/rp-hal",children:"PWM or audio library"})}),(0,n.jsx)(i.td,{children:"Audio output control"}),(0,n.jsx)(i.td,{children:"Drives the audio amplifier for sound effects"})]})]})]}),"\n",(0,n.jsx)(i.h2,{id:"links",children:"Links"}),"\n",(0,n.jsxs)(i.ol,{children:["\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"https://github.com/almindor/st7789",children:"ST7789 Rust driver"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"https://github.com/embedded-graphics/examples",children:"embedded-graphics examples"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"https://www.raspberrypi.com/documentation/microcontrollers/rust.html",children:"Rust on Raspberry Pi Pico"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"https://docs.rs/rand/latest/rand/",children:"Random Number Generation in Rust"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"https://github.com/eldruin/at24c256",children:"AT24C256 EEPROM Rust driver"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"https://www.ti.com/product/TPA3118D2",children:"TPA3118 Audio Amplifier datasheet"})}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.a,{href:"https://docs.rs/embedded-hal/latest/embedded_hal/",children:"Rust embedded HAL"})," \u2014 general hardware abstraction library"]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.a,{href:"https://www.kicad.org/help/tutorials/",children:"KiCAD tutorials"})," \u2014 for making the schematics"]}),"\n"]})]})}function a(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},9914:(e,i,r)=>{r.d(i,{A:()=>s});const s=r.p+"assets/images/slots-machine-kicad-schematic-3dcedc7f0c63a200f04c29bb9a163ddd.svg"},28453:(e,i,r)=>{r.d(i,{R:()=>d,x:()=>l});var s=r(96540);const n={},t=s.createContext(n);function d(e){const i=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),s.createElement(t.Provider,{value:i},e.children)}}}]);