"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5632],{92369:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"project/2025/matei_alexandru.tita/index","title":"\ud83d\udd10 Smart Door Lock with Face Recognition","description":"A secure, AI-powered door lock system using ESP32-CAM and Raspberry Pi Pico 2.","source":"@site/versioned_docs/version-fils_en/project/2025/matei_alexandru.tita/index.md","sourceDirName":"project/2025/matei_alexandru.tita","slug":"/project/2025/matei_alexandru.tita/","permalink":"/docs/fils_en/project/2025/matei_alexandru.tita/","draft":false,"unlisted":false,"editUrl":"https://www.github.com/upb-pmrust/website/edit/main/website/versioned_docs/version-fils_en/project/2025/matei_alexandru.tita/index.md","tags":[],"version":"fils_en","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Rusty Lock Access System","permalink":"/docs/fils_en/project/2025/matei.bejinaru/"},"next":{"title":"Digital Oscilloscope","permalink":"/docs/fils_en/project/2025/mihai.lazaroiu1402/"}}');var s=i(74848),t=i(28453);const d={},l="\ud83d\udd10 Smart Door Lock with Face Recognition",o={},c=[{value:"\ud83e\uddfe Description",id:"-description",level:2},{value:"\ud83d\udca1 Motivation",id:"-motivation",level:2},{value:"\ud83e\udde0 Architecture",id:"-architecture",level:2},{value:"System Flow",id:"system-flow",level:3},{value:"Schematic diagram",id:"schematic-diagram",level:2},{value:"\ud83d\uddd3\ufe0f Development Log",id:"\ufe0f-development-log",level:2},{value:"Week 1 \u2013 Initial Planning",id:"week-1--initial-planning",level:3},{value:"Week 2 \u2013 Core Setup",id:"week-2--core-setup",level:3},{value:"Week 3 \u2013 Hardware Integration",id:"week-3--hardware-integration",level:3},{value:"Week 4 \u2013 Logging and Testing",id:"week-4--logging-and-testing",level:3},{value:"\ud83d\udd29 Hardware",id:"-hardware",level:2},{value:"Components Used",id:"components-used",level:3},{value:"Bill of Materials",id:"bill-of-materials",level:3},{value:"\ud83d\udcbb Software",id:"-software",level:2},{value:"Tools &amp; Frameworks",id:"tools--frameworks",level:3},{value:"\ud83d\udcf7 ESP32-CAM",id:"-esp32-cam",level:4},{value:"\ud83e\udd80 Raspberry Pi Pico 2",id:"-raspberry-pi-pico-2",level:4},{value:"\ud83d\udc0d Laptop Logger",id:"-laptop-logger",level:4}];function a(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"-smart-door-lock-with-face-recognition",children:"\ud83d\udd10 Smart Door Lock with Face Recognition"})}),"\n",(0,s.jsx)(n.p,{children:"A secure, AI-powered door lock system using ESP32-CAM and Raspberry Pi Pico 2."}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Author"}),": Matei-Alexandru Ti\u021b\u0103 ",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"GitHub Project Link"}),": ",(0,s.jsx)(n.a,{href:"https://github.com/UPB-PMRust-Students/project-MateiTita",children:"https://github.com/UPB-PMRust-Students/project-MateiTita"})]})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-description",children:"\ud83e\uddfe Description"}),"\n",(0,s.jsxs)(n.p,{children:["This project implements a smart door lock system that uses ",(0,s.jsx)(n.strong,{children:"face recognition"})," for access control.",(0,s.jsx)(n.br,{}),"\n","The system relies on an ",(0,s.jsx)(n.strong,{children:"ESP32-CAM"})," to detect and recognize faces and streams video live over Wi-Fi.",(0,s.jsx)(n.br,{}),"\n","When a known face is detected, it sends a signal to a ",(0,s.jsx)(n.strong,{children:"Raspberry Pi Pico 2"}),", written in ",(0,s.jsx)(n.strong,{children:"Rust"}),", which activates a ",(0,s.jsx)(n.strong,{children:"servo motor"})," to unlock the door and triggers visual (LED) and audio (buzzer) feedback."]}),"\n",(0,s.jsxs)(n.p,{children:["All access events are ",(0,s.jsx)(n.strong,{children:"logged in real time"})," to a connected laptop via USB."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-motivation",children:"\ud83d\udca1 Motivation"}),"\n",(0,s.jsx)(n.p,{children:"The goal of this project is to explore a practical application of embedded systems and machine vision, combining:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Offline, low-cost ",(0,s.jsx)(n.strong,{children:"AI"})," via ESP32"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Embedded Rust"})," programming"]}),"\n",(0,s.jsx)(n.li,{children:"Real-time feedback and logging"}),"\n",(0,s.jsx)(n.li,{children:"A functional and extendable prototype for smart home security"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-architecture",children:"\ud83e\udde0 Architecture"}),"\n",(0,s.jsx)(n.h3,{id:"system-flow",children:"System Flow"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"ESP32-CAM"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Captures live video"}),"\n",(0,s.jsx)(n.li,{children:"Performs face detection and recognition"}),"\n",(0,s.jsx)(n.li,{children:"Streams to browser via local IP"}),"\n",(0,s.jsxs)(n.li,{children:["Sends ",(0,s.jsx)(n.code,{children:'"GRANT"'})," or ",(0,s.jsx)(n.code,{children:'"DENY"'})," to Pico over UART"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Raspberry Pi Pico 2"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Waits for serial commands"}),"\n",(0,s.jsxs)(n.li,{children:["Controls:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Servo"})," for door lock"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"LEDs"})," (Green = granted, Red = denied)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Buzzer"})," for audio feedback"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Sends event logs to laptop via USB"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Laptop"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Runs a Python script to receive and timestamp events"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"schematic-diagram",children:(0,s.jsx)(n.img,{alt:"Schematic diagram",src:i(1764).A+"",width:"1024",height:"700"})}),"\n",(0,s.jsx)(n.h2,{id:"\ufe0f-development-log",children:"\ud83d\uddd3\ufe0f Development Log"}),"\n",(0,s.jsx)(n.h3,{id:"week-1--initial-planning",children:"Week 1 \u2013 Initial Planning"}),"\n",(0,s.jsx)(n.p,{children:"I set up and powered the Raspberry Pi Pico 2 and ESP32-CAM, tested the ESP32-CAM by flashing the CameraWebServer example and viewing the live video stream on my laptop, and verified the Pico environment by writing a simple Rust program to blink an LED, confirming basic GPIO control and that both boards were functioning properly."}),"\n",(0,s.jsx)(n.h3,{id:"week-2--core-setup",children:"Week 2 \u2013 Core Setup"}),"\n",(0,s.jsx)(n.h3,{id:"week-3--hardware-integration",children:"Week 3 \u2013 Hardware Integration"}),"\n",(0,s.jsx)(n.h3,{id:"week-4--logging-and-testing",children:"Week 4 \u2013 Logging and Testing"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-hardware",children:"\ud83d\udd29 Hardware"}),"\n",(0,s.jsx)(n.h3,{id:"components-used",children:"Components Used"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Component"}),(0,s.jsx)(n.th,{children:"Purpose"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"ESP32-CAM"}),(0,s.jsx)(n.td,{children:"Face recognition and video streaming"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Raspberry Pi Pico 2"}),(0,s.jsx)(n.td,{children:"Hardware control (Rust)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Servo Motor (SG90)"}),(0,s.jsx)(n.td,{children:"Lock/unlock mechanism"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Red and Green LEDs"}),(0,s.jsx)(n.td,{children:"Visual status indication"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Buzzer"}),(0,s.jsx)(n.td,{children:"Audio feedback"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Breadboard + Wires"}),(0,s.jsx)(n.td,{children:"Connections and prototyping"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Laptop (USB)"}),(0,s.jsx)(n.td,{children:"Real-time log receiver"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"bill-of-materials",children:"Bill of Materials"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Component"}),(0,s.jsx)(n.th,{children:"Qty"}),(0,s.jsx)(n.th,{children:"Price (RON)"}),(0,s.jsx)(n.th,{children:"Total (RON)"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"ESP32-CAM"}),(0,s.jsx)(n.td,{children:"1"}),(0,s.jsx)(n.td,{children:"50"}),(0,s.jsx)(n.td,{children:"50"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Raspberry Pi Pico 2"}),(0,s.jsx)(n.td,{children:"1"}),(0,s.jsx)(n.td,{children:"35"}),(0,s.jsx)(n.td,{children:"35"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"SG90 Servo"}),(0,s.jsx)(n.td,{children:"1"}),(0,s.jsx)(n.td,{children:"20"}),(0,s.jsx)(n.td,{children:"20"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"LEDs + Buzzer"}),(0,s.jsx)(n.td,{children:"4"}),(0,s.jsx)(n.td,{children:"5"}),(0,s.jsx)(n.td,{children:"5"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Breadboard + Wires"}),(0,s.jsx)(n.td,{children:"1"}),(0,s.jsx)(n.td,{children:"15"}),(0,s.jsx)(n.td,{children:"15"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Total"})}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"125"})})]})]})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-software",children:"\ud83d\udcbb Software"}),"\n",(0,s.jsx)(n.h3,{id:"tools--frameworks",children:"Tools & Frameworks"}),"\n",(0,s.jsx)(n.h4,{id:"-esp32-cam",children:"\ud83d\udcf7 ESP32-CAM"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"CameraWebServer example"}),"\n",(0,s.jsx)(n.li,{children:"Face recognition + streaming over Wi-Fi"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"-raspberry-pi-pico-2",children:"\ud83e\udd80 Raspberry Pi Pico 2"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Rust with ",(0,s.jsx)(n.code,{children:"rp2040-hal"}),", ",(0,s.jsx)(n.code,{children:"embedded-hal"}),", ",(0,s.jsx)(n.code,{children:"usb-device"})]}),"\n",(0,s.jsx)(n.li,{children:"UART parser for GRANT/DENY commands"}),"\n",(0,s.jsx)(n.li,{children:"PWM control for servo + GPIO for feedback"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"-laptop-logger",children:"\ud83d\udc0d Laptop Logger"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Python 3 + ",(0,s.jsx)(n.code,{children:"pyserial"})]}),"\n",(0,s.jsx)(n.li,{children:"Receives USB serial data"}),"\n",(0,s.jsxs)(n.li,{children:["Timestamps and saves logs to ",(0,s.jsx)(n.code,{children:"door_log.txt"})]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},1764:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/Scheme-5f0995760b458407ddcb42b07eb38fcf.webp"},28453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>l});var r=i(96540);const s={},t=r.createContext(s);function d(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);