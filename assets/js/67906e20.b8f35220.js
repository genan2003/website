"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6252],{64783:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"project/2025/maria_elena.tudor/index","title":"2000s Romanian Pop Music Player","description":"A coin-operated music player that plays Romanian pop hits from the 2000s and displays track metadata on an OLED screen.","source":"@site/versioned_docs/version-acs_cc/project/2025/maria_elena.tudor/index.md","sourceDirName":"project/2025/maria_elena.tudor","slug":"/project/2025/maria_elena.tudor/","permalink":"/docs/acs_cc/project/2025/maria_elena.tudor/","draft":false,"unlisted":false,"editUrl":"https://www.github.com/upb-pmrust/website/edit/main/website/versioned_docs/version-acs_cc/project/2025/maria_elena.tudor/index.md","tags":[],"version":"acs_cc","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Drift Drawing Table","permalink":"/docs/acs_cc/project/2025/maria_denisa.aliu/"},"next":{"title":"PlantMood - Interactive Plant with Emotional Feedback","permalink":"/docs/acs_cc/project/2025/maria_tatiana.dinu/"}}');var t=s(74848),n=s(28453);const a={},d="2000s Romanian Pop Music Player",c={},o=[{value:"Description",id:"description",level:2},{value:"Motivation",id:"motivation",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Log",id:"log",level:2},{value:"Week 5 - 11 May",id:"week-5---11-may",level:3},{value:"Week 12 - 18 May",id:"week-12---18-may",level:3},{value:"Week 19 - 25 May",id:"week-19---25-may",level:3},{value:"Hardware",id:"hardware",level:2},{value:"Schematics",id:"schematics",level:3},{value:"Bill of Materials",id:"bill-of-materials",level:3},{value:"Software",id:"software",level:2},{value:"Links",id:"links",level:2}];function l(e){const r={a:"a",admonition:"admonition",br:"br",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"2000s-romanian-pop-music-player",children:"2000s Romanian Pop Music Player"})}),"\n",(0,t.jsx)(r.p,{children:"A coin-operated music player that plays Romanian pop hits from the 2000s and displays track metadata on an OLED screen."}),"\n",(0,t.jsx)(r.admonition,{type:"info",children:(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Author"}),": Maria-Elena Tudor ",(0,t.jsx)(r.br,{}),"\n",(0,t.jsx)(r.strong,{children:"GitHub Project Link"}),": ",(0,t.jsx)(r.a,{href:"https://github.com/UPB-PMRust-Students/proiect-mariacthi",children:"https://github.com/UPB-PMRust-Students/proiect-mariacthi"})]})}),"\n",(0,t.jsx)(r.h2,{id:"description",children:"Description"}),"\n",(0,t.jsx)(r.p,{children:"This project combines the nostalgic feel of classic jukeboxes with a curated playlist of Romanian pop music from the 2000s. Users insert a coin to unlock playback; track information (title, artist, duration, release year) is shown on an OLED display. Physical buttons allow play/pause, previous/next, shuffle, and volume control."}),"\n",(0,t.jsx)(r.h2,{id:"motivation",children:"Motivation"}),"\n",(0,t.jsx)(r.p,{children:"At every party I attend, Romanian hits from the 2000s always come on\u2014and I love that era\u2019s pop sound. I\u2019ve also always been fascinated by the jukeboxes featured in movies. Merging these two ideas into a single device seemed like a fun, tangible way to share my favorite decade of music with friends."}),"\n",(0,t.jsx)(r.h2,{id:"architecture",children:"Architecture"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{alt:"Schematic diagram",src:s(70689).A+"",width:"561",height:"451"})}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Microcontroller Raspberry Pi Pico 2W"})," runs embedded Rust firmware, coordinating all peripherals."]}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Tasks"}),":","\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"Handles peripheral I/O (SPI, I\xb2C, GPIO, PWM)"}),"\n",(0,t.jsx)(r.li,{children:"Manages shuffle queue and metadata parsing"}),"\n",(0,t.jsx)(r.li,{children:"Debounces buttons & validates coin input"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"OLED Display"})," shows metadata over I2C (song title, artist name, duration)."]}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Tactile Buttons"})," read GPIO inputs for user controls."]}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Coin Validator Sensor"})," detects insertion of a valid coin/token and signals the microcontroller to unlock playback for one track."]}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Audio Amplifier + Speaker"})," decodes MP3 through I2S and drives speaker via PWM."]}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"SD Card Module"})," stores MP3 files; accessed over SPI."]}),"\n",(0,t.jsx)(r.h2,{id:"log",children:"Log"}),"\n",(0,t.jsx)(r.h3,{id:"week-5---11-may",children:"Week 5 - 11 May"}),"\n",(0,t.jsx)(r.h3,{id:"week-12---18-may",children:"Week 12 - 18 May"}),"\n",(0,t.jsx)(r.h3,{id:"week-19---25-may",children:"Week 19 - 25 May"}),"\n",(0,t.jsx)(r.h2,{id:"hardware",children:"Hardware"}),"\n",(0,t.jsx)(r.p,{children:"The entire system is built around a Raspberry Pi Pico 2 W running embedded Rust, which reads MP3 files off a microSD card, drives a compact SSD1306 OLED screen for track info, and monitors both tactile buttons and a coin\u2010validator sensor for user input. Audio is streamed digitally to an amplifier and speaker, while everything is powered from a single regulated 5 V source and prototyped on a breadboard for easy iteration."}),"\n",(0,t.jsx)(r.h3,{id:"schematics",children:"Schematics"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{alt:"Kicad Schematic",src:s(17244).A+"",width:"1063",height:"757"})}),"\n",(0,t.jsx)(r.h3,{id:"bill-of-materials",children:"Bill of Materials"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Device"}),(0,t.jsx)(r.th,{children:"Usage"}),(0,t.jsx)(r.th,{children:"Price"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"https://www.raspberrypi.com/documentation/microcontrollers/pico-series.html",children:"Raspberry Pi Pico 2W"})}),(0,t.jsx)(r.td,{children:"The microcontroller"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"https://www.optimusdigital.ro/ro/placi-raspberry-pi/13327-raspberry-pi-pico-2-w.html",children:"39.66 RON"})})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"https://www.raspberrypi.com/documentation/microcontrollers/pico-series.html",children:"Raspberry Pi Pico 2W"})}),(0,t.jsx)(r.td,{children:"Debug"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"https://www.optimusdigital.ro/ro/placi-raspberry-pi/13327-raspberry-pi-pico-2-w.html",children:"39.66 RON"})})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"https://www.micros.com.pl/mediaserver/OLED12864-0.96-W-2_0001.pdf",children:'Display OLED 128x64 - 0.96" SPI'})}),(0,t.jsx)(r.td,{children:"User interface display"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"https://ardushop.ro/ro/display-uri-si-led-uri/1110-display-oled-128x64-096-spi-6427854015433.html",children:"23.29 RON"})})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"https://github.com/GroundStudio/GroundStudio_MicroSD_module/tree/main/Hardware",children:"MicroSD Card Module"})}),(0,t.jsx)(r.td,{children:"Storage for MP3 files"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"https://ardushop.ro/ro/module/1553-groundstudio-microsd-module-6427854023056.html",children:"7.14 RON"})})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"https://ardushop.ro/ro/raspberry-pi/636-card-microsd-32gb-clasa-10-6427854007919.html",children:"Card MicroSD 32Gb - clasa 10"})}),(0,t.jsx)(r.td,{children:"Memory Card"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"https://ardushop.ro/ro/raspberry-pi/636-card-microsd-32gb-clasa-10-6427854007919.html",children:"42.89 RON"})})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"https://ardushop.ro/ro/module/1549-amplificator-3w-i2s-max98357a-clasa-d-6427854022967.html",children:"Amplificator 3W I2S - MAX98357A"})}),(0,t.jsx)(r.td,{children:"Audio output"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"https://ardushop.ro/ro/module/1549-amplificator-3w-i2s-max98357a-clasa-d-6427854022967.html",children:"17.03 RON"})})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"https://ardushop.ro/ro/electronica/1962-difuzor-50mm-2w-32ohm-6427854029898.html",children:"Difuzor 50mm - 2W - 32ohm"})}),(0,t.jsx)(r.td,{children:"Audio output device"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"https://ardushop.ro/ro/electronica/1962-difuzor-50mm-2w-32ohm-6427854029898.html",children:"4.82 RON"})})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"https://ardushop.ro/ro/electronica/2289-modul-senzor-ultrasonic-detector-distanta-hc-sr04-6427854030726.html",children:"Modul senzor Ultrasonic - detector distanta HC-SR04"})}),(0,t.jsx)(r.td,{children:"Coin sensor"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"https://ardushop.ro/ro/electronica/2289-modul-senzor-ultrasonic-detector-distanta-hc-sr04-6427854030726.html",children:"9.75 RON"})})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Electronic components: buttons, wires, pins and Breadboard"}),(0,t.jsx)(r.td,{children:"Electronic Components"}),(0,t.jsx)(r.td,{children:"80 RON"})]})]})]}),"\n",(0,t.jsx)(r.h2,{id:"software",children:"Software"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Library"}),(0,t.jsx)(r.th,{children:"Description"}),(0,t.jsx)(r.th,{children:"Usage"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"https://embassy.dev/",children:"embassy"})}),(0,t.jsx)(r.td,{children:"Async executor and HAL integration for embedded"}),(0,t.jsx)(r.td,{children:"Provides task scheduling, timers, and async support"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"https://github.com/rust-embedded/embedded-hal",children:"embedded-hal"})}),(0,t.jsx)(r.td,{children:"Hardware Abstraction Layer for embedded Rust"}),(0,t.jsx)(r.td,{children:"Unifies SPI, I2C, GPIO and PWM drivers"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"https://docs.rs/display-interface/latest/display_interface/",children:"display-interface"})}),(0,t.jsx)(r.td,{children:"Generic display API"}),(0,t.jsx)(r.td,{children:"Abstracts over SSD1306 driver for easy text & graphics"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"https://github.com/rust-embedded-community/ssd1306",children:"ssd1306"})}),(0,t.jsx)(r.td,{children:"SSD1306 OLED display driver"}),(0,t.jsx)(r.td,{children:"Initializes display, draws frames, and manages framebuffer"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"https://docs.rust-embedded.org/cortex-m-rt/0.6.0/rand/index.html",children:"rand"})}),(0,t.jsx)(r.td,{children:"Random number generation"}),(0,t.jsx)(r.td,{children:"Implements shuffle logic for playback queue"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"https://docs.rs/minimp3/latest/minimp3/",children:"minimp3"})}),(0,t.jsx)(r.td,{children:"Pure-Rust MP3 decoder"}),(0,t.jsx)(r.td,{children:"Parses MP3 frames and outputs PCM samples"})]})]})]}),"\n",(0,t.jsx)(r.h2,{id:"links",children:"Links"})]})}function h(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},17244:(e,r,s)=>{s.d(r,{A:()=>i});const i=s.p+"assets/images/kicad-c0183555c2059347db1f1df5b97ea6a1.webp"},70689:(e,r,s)=>{s.d(r,{A:()=>i});const i=s.p+"assets/images/schematic-c8c4672561175002ce6321442d2796fc.webp"},28453:(e,r,s)=>{s.d(r,{R:()=>a,x:()=>d});var i=s(96540);const t={},n=i.createContext(t);function a(e){const r=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(n.Provider,{value:r},e.children)}}}]);