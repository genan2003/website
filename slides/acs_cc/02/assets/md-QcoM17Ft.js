import{_ as r}from"./slidev/CodeBlockWrapper.vue_vue_type_script_setup_true_lang-BQopiScd.js";import{b as h,o,w as a,g as i,ac as l,e as d,m as p,v as g,x as u,C as t}from"./modules/vue-DxICp5ZB.js";import{_ as m}from"./slidev/two-cols.vue_vue_type_script_setup_true_lang-C19_8M5-.js";import{u as A,f as y}from"./slidev/context-B6_UQuX8.js";import"./modules/unplugin-icons-BCMGC1M5.js";import"./index-BcmwoiMm.js";import"./modules/shiki-BkEcIHu8.js";const x={__name:"slides.md__slidev_5",setup(f){const{$clicksContext:e,$frontmatter:n}=A();return e.setup(),(c,s)=>{const k=r;return o(),h(m,g(u(t(y)(t(n),4))),{right:a(_=>[s[1]||(s[1]=i("br",null,null,-1)),s[2]||(s[2]=i("br",null,null,-1)),d(k,p({},{ranges:[]}),{default:a(()=>s[0]||(s[0]=[i("pre",{class:"shiki shiki-themes vitesse-dark vitesse-light slidev-code",style:{"--shiki-dark":"#dbd7caee","--shiki-light":"#393a34","--shiki-dark-bg":"#121212","--shiki-light-bg":"#ffffff"}},[i("code",{class:"language-rust"},[i("span",{class:"line"},[i("span",{style:{"--shiki-dark":"#758575DD","--shiki-light":"#A0ADA0"}},"//EXAMPLES")]),l(`
`),i("span",{class:"line"}),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-dark":"#CB7676","--shiki-light":"#AB5959"}},"let"),i("span",{style:{"--shiki-dark":"#BD976A","--shiki-light":"#B07D48"}}," board_id"),i("span",{style:{"--shiki-dark":"#666666","--shiki-light":"#999999"}}," ="),i("span",{style:{"--shiki-dark":"#80A665","--shiki-light":"#59873A"}}," get_board_id"),i("span",{style:{"--shiki-dark":"#666666","--shiki-light":"#999999"}},"();"),i("span",{style:{"--shiki-dark":"#DBD7CAEE","--shiki-light":"#393A34"}}," ")]),l(`
`),i("span",{class:"line"}),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-dark":"#CB7676","--shiki-light":"#AB5959"}},"let"),i("span",{style:{"--shiki-dark":"#5DA994","--shiki-light":"#2E8F82"}}," WiFi_id"),i("span",{style:{"--shiki-dark":"#666666","--shiki-light":"#999999"}}," ="),i("span",{style:{"--shiki-dark":"#80A665","--shiki-light":"#59873A"}}," read_WiFi_id_from_config"),i("span",{style:{"--shiki-dark":"#666666","--shiki-light":"#999999"}},"();"),i("span",{style:{"--shiki-dark":"#DBD7CAEE","--shiki-light":"#393A34"}}," ")]),l(`
`),i("span",{class:"line"}),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-dark":"#CB7676","--shiki-light":"#AB5959"}},"let"),i("span",{style:{"--shiki-dark":"#5DA994","--shiki-light":"#2E8F82"}}," AES_key"),i("span",{style:{"--shiki-dark":"#CB7676","--shiki-light":"#AB5959"}},":"),i("span",{style:{"--shiki-dark":"#666666","--shiki-light":"#999999"}}," ["),i("span",{style:{"--shiki-dark":"#5DA994","--shiki-light":"#2E8F82"}},"u8"),i("span",{style:{"--shiki-dark":"#666666","--shiki-light":"#999999"}},";"),i("span",{style:{"--shiki-dark":"#4C9A91","--shiki-light":"#2F798A"}}," 32"),i("span",{style:{"--shiki-dark":"#666666","--shiki-light":"#999999"}},"]"),i("span",{style:{"--shiki-dark":"#666666","--shiki-light":"#999999"}}," ="),i("span",{style:{"--shiki-dark":"#80A665","--shiki-light":"#59873A"}}," read_AES_key_from_OTP"),i("span",{style:{"--shiki-dark":"#666666","--shiki-light":"#999999"}},"();"),i("span",{style:{"--shiki-dark":"#DBD7CAEE","--shiki-light":"#393A34"}}," ")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-dark":"#758575DD","--shiki-light":"#A0ADA0"}},"// AES-256 key")])])],-1)])),_:1},16)]),default:a(()=>[s[3]||(s[3]=i("h1",null,"Variables in Rust: let",-1)),s[4]||(s[4]=i("h3",null,"A few characteristics:",-1)),s[5]||(s[5]=i("ul",null,[i("li",null,[i("strong",null,"Usage"),l(": For values unknown at compile time that will not change once an initial value is set (for example- values that are read from a config file at boot time);")]),i("li",null,[i("strong",null,"Immutable by Default"),l(": Variables declared with let are immutable;")]),i("li",null,[i("strong",null,"Runtime Known"),l(": The value is determined at runtime, usually unknown at compile time;")]),i("li",null,[i("strong",null,"Usual Location in Embedded"),l(": Stored in SRAM (RAM) since itâ€™s allocated at runtime.")]),i("li",null,[i("strong",null,"Naming Convention"),l(": snake_case")])],-1))]),_:1},16)}}};export{x as default};
