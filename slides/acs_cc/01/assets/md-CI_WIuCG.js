import{b as s,o as a,w as u,g as t,ac as l,v as d,x as p,C as o}from"./modules/vue-BocELwOd.js";import{I as c}from"./slidev/default-N9RyI1FR.js";import{u as i,f}from"./slidev/context-973eLsof.js";import{_ as m}from"./index-CVVyox26.js";import"./modules/shiki-C7CnXUK2.js";const _={__name:"dr_software.md__slidev_74",setup(h){const{$clicksContext:r,$frontmatter:n}=i();return r.setup(),(P,e)=>(a(),s(c,d(p(o(f)(o(n),73))),{default:u(()=>e[0]||(e[0]=[t("h1",null,"Memory on ARM - RP2350 example - M33 based",-1),t("h2",null,"RP2350 Memory Breakdown",-1),t("table",null,[t("thead",null,[t("tr",null,[t("th",null,"Memory Type"),t("th",null,"Size"),t("th",null,"Purpose")])]),t("tbody",null,[t("tr",null,[t("td",null,[l("XIP "),t("sup",{class:"footnote-ref"},[t("a",{href:"#fn1",id:"fnref1"},"[1]")]),l(" Flash")]),t("td",null,"Up to 16 MB"),t("td",null,"Stores program code (external QSPI Flash).")]),t("tr",null,[t("td",null,"SRAM (On-chip)"),t("td",null,"520 KB"),t("td",null,"Stores stack, heap, variables, and data.")]),t("tr",null,[t("td",null,"Boot ROM"),t("td",null,"32 KB"),t("td",null,"Stores bootloader, factory firmware.")]),t("tr",null,[t("td",null,"OTP"),t("td",null,"8 KB"),t("td",null,"One-time-programmable (Product id, cryptographic keys).")]),t("tr",null,[t("td",null,"Peripheral Space"),t("td",null,"Varies"),t("td",null,"Memory-mapped I/O for GPIO, UART, SPI, DMA.")]),t("tr",null,[t("td",null,"Registers"),t("td",null,"16 + control registers"),t("td",null,"General purpose + program flow + special purpose")])])],-1),t("br",null,null,-1),t("hr",{class:"footnotes-sep"},null,-1),t("section",{class:"footnotes"},[t("ol",{class:"footnotes-list"},[t("li",{id:"fn1",class:"footnote-item"},[t("p",null,[l("XIP = Execute in Place (without this, the code would need to be copied in RAM first) "),t("a",{href:"#fnref1",class:"footnote-backref"},"↩︎")])])])],-1)])),_:1},16))}},B=m(_,[["__scopeId","data-v-c6e06273"]]);export{B as default};
