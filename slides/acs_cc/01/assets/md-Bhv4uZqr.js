import{b as i,o as s,w as r,g as e,v as n,x as c,C as a}from"./modules/vue-BocELwOd.js";import{I as u}from"./slidev/default-N9RyI1FR.js";import{u as d,f as p}from"./slidev/context-973eLsof.js";import"./index-CVVyox26.js";import"./modules/shiki-C7CnXUK2.js";const x={__name:"dr_software.md__slidev_77",setup(m){const{$clicksContext:o,$frontmatter:l}=d();return o.setup(),(f,t)=>(s(),i(u,n(c(a(p)(a(l),76))),{default:r(()=>t[0]||(t[0]=[e("h1",null,"Why Rust-lang",-1),e("h3",null,"The tagline of Rust is No Undefined Behavior.",-1),e("ul",null,[e("li",null,"no null reference; the Rust compiler explicitly asks developers to check this;"),e("li",null,"no implicit cast, even adding a u32 to a u8 must be casted;"),e("li",null,"safe access to shared data across threads verified at compile time;"),e("li",null,"uses type states to move runtime checks to compile time and force developers to check;"),e("li",null,"clearly defined data types, unlike i8 or u128;"),e("li",null,"safe unions, that provide a discriminant to prevent wrong interpretation of data;"),e("li",null,"clear code organization into crates and modules;"),e("li",null,"backward compatibility at crate level.")],-1)])),_:1},16))}};export{x as default};
