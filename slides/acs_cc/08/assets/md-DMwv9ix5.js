import{b as n,o as r,w as i,g as s,C as t,v as m,x as u,B as l}from"./modules/vue-DTPnQ7Sn.js";import{I as c}from"./slidev/default-C0knWAYV.js";import{u as d,f as p}from"./slidev/context-DlzwJrcu.js";import"./index-DeCFOQO_.js";import"./modules/shiki-BV5ba4Hb.js";const _="/slides/acs_cc/08/assets/smoltcp-BGwWnzfF.svg",k={__name:"slides.md__slidev_27",setup(P){const{$clicksContext:a,$frontmatter:o}=d();return a.setup(),(f,e)=>(r(),n(c,m(u(l(p)(l(o),26))),{default:i(()=>e[0]||(e[0]=[s("h1",null,"Embassy Net",-1),s("p",null,[s("em",null,"a smol TCP/IP stack")],-1),s("div",{grid:"~ cols-2 gap-5"},[s("div",null,[s("ul",null,[s("li",null,[t("uses "),s("a",{href:"https://docs.rs/smoltcp/latest/smoltcp/",target:"_blank"},[s("em",null,"smoltcp")]),t(", embedded (no_std) TCP/IP stack written in Rust")]),s("li",null,[s("em",null,"L3"),t(": IPv4, IPv6, IGMPv4 (ping), 6LoWPAN")]),s("li",null,[s("em",null,"L4"),t(": TCP and UDP")]),s("li",null,[s("em",null,"L7"),t(": DHCPv4 and DNS")])])]),s("div",{align:"center"},[s("img",{src:_,class:"rounded w-120"})])],-1)])),_:1},16))}};export{k as default};
