import{_ as n}from"./slidev/CodeBlockWrapper.vue_vue_type_script_setup_true_lang-BLB8l_jS.js";import{b as h,o as p,w as t,g as s,e as k,m as d,B as i,v as m,x as u,C as l}from"./modules/vue-DiLy2TNw.js";import{I as c}from"./slidev/default-DjqtG-p5.js";import{u as g,f}from"./slidev/context-BvOIw099.js";import"./modules/unplugin-icons-BynKwK7S.js";import"./index-Bt6BojZf.js";import"./modules/shiki-BwPahAIs.js";const E={__name:"slides.md__slidev_30",setup(y){const{$clicksContext:a,$frontmatter:r}=g();return a.setup(),(B,e)=>{const o=n;return p(),h(c,m(u(l(f)(l(r),29))),{default:t(()=>[e[1]||(e[1]=s("h1",null,"5: Memop",-1)),e[2]||(e[2]=s("p",null,"Memop expands the memory segment available to the process, allows the process to retrieve pointers to its allocated memory space, provides a mechanism for the process to tell the kernel where its stack and heap start, and other operations involving process memory.",-1)),k(o,d({lines:!1},{ranges:["*"]}),{default:t(()=>e[0]||(e[0]=[s("pre",{class:"shiki shiki-themes vitesse-dark vitesse-light slidev-code",style:{"--shiki-dark":"#dbd7caee","--shiki-light":"#393a34","--shiki-dark-bg":"#121212","--shiki-light-bg":"#ffffff"}},[s("code",{class:"language-rust"},[s("span",{class:"line"},[s("span",{style:{"--shiki-dark":"#80A665","--shiki-light":"#59873A"}},"memop"),s("span",{style:{"--shiki-dark":"#666666","--shiki-light":"#999999"}},"("),s("span",{style:{"--shiki-dark":"#BD976A","--shiki-light":"#B07D48"}},"op_type"),s("span",{style:{"--shiki-dark":"#CB7676","--shiki-light":"#AB5959"}},":"),s("span",{style:{"--shiki-dark":"#5DA994","--shiki-light":"#2E8F82"}}," u32"),s("span",{style:{"--shiki-dark":"#666666","--shiki-light":"#999999"}},","),s("span",{style:{"--shiki-dark":"#BD976A","--shiki-light":"#B07D48"}}," argument"),s("span",{style:{"--shiki-dark":"#CB7676","--shiki-light":"#AB5959"}},":"),s("span",{style:{"--shiki-dark":"#5DA994","--shiki-light":"#2E8F82"}}," u32"),s("span",{style:{"--shiki-dark":"#666666","--shiki-light":"#999999"}},")"),s("span",{style:{"--shiki-dark":"#CB7676","--shiki-light":"#AB5959"}}," ->"),s("span",{style:{"--shiki-dark":"#666666","--shiki-light":"#999999"}}," [["),s("span",{style:{"--shiki-dark":"#C99076","--shiki-light":"#A65E2B"}}," VARIES"),s("span",{style:{"--shiki-dark":"#666666","--shiki-light":"#999999"}}," ]]"),s("span",{style:{"--shiki-dark":"#4D9375","--shiki-light":"#1E754F"}}," as"),s("span",{style:{"--shiki-dark":"#5DA994","--shiki-light":"#2E8F82"}}," u32")])])],-1)])),_:1},16),e[3]||(e[3]=s("div",{grid:"~ cols-2 gap-3"},[s("div",null,[s("p",null,[s("strong",null,"Arguments")]),s("ul",null,[s("li",null,[s("code",null,"op_type"),i(": An integer indicating whether this is a "),s("code",null,"brk"),i(" (0), a "),s("code",null,"sbrk"),i(" (1), or another memop call.")]),s("li",null,[s("code",null,"argument"),i(": The argument to "),s("code",null,"brk"),i(", "),s("code",null,"sbrk"),i(", or other call.")])]),s("p",null,[i("Each memop operation is specific and details of each call can be found in the "),s("a",{href:"https://github.com./tock/blob/master/doc/syscalls/memop.md",target:"_blank"},"memop syscall documentation"),i(".")])]),s("div",null,[s("p",null,[s("strong",null,"Return")]),s("ul",null,[s("li",null,[i("Dependent on the particular "),s("em",null,"memop"),i(" call.")])])])],-1))]),_:1},16)}}};export{E as default};
