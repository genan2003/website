import{b as o,o as a,w as i,g as e,B as l,v as u,x as d,C as t}from"./modules/vue-DiLy2TNw.js";import{I as p}from"./slidev/default-DQNynrir.js";import{u as c,f as m}from"./slidev/context-ySqhYmJe.js";import"./index-Yp8RxnQ5.js";import"./modules/shiki-BwPahAIs.js";const g="/slides/fils_en/10/assets/tock-B-CljiFq.svg",y={__name:"slides.md__slidev_18",setup(_){const{$clicksContext:r,$frontmatter:n}=c();return r.setup(),(f,s)=>(a(),o(p,u(d(t(m)(t(n),17))),{default:i(()=>s[0]||(s[0]=[e("h1",null,"Tock OS",-1),e("p",null,"an embedded operating systems that works like a desktop or server one",-1),e("div",{grid:"~ cols-3 gap-5"},[e("div",{style:{"grid-column-start":"1","grid-column-end":"3"}},[e("ul",null,[e("li",null,[l("A "),e("strong",null,"preemptive"),l(" embedded OS (runs on MCUs) "),e("ul",null,[e("li",null,"Cortex-M"),e("li",null,"RISC-V")])]),e("li",null,[l("Uses memory protection ("),e("strong",null,"MPU required"),l(")")]),e("li",null,[l("Has separate "),e("strong",null,"kernel and user space"),e("ul",null,[e("li",null,"most embedded OS have the one piece software philosophy")])]),e("li",null,"Runs untrusted apps in user space"),e("li",null,[e("strong",null,"Hybrid"),l(" architecture")]),e("li",null,"Kernel (and drivers) written in Rust"),e("li",null,"Apps written in C/C++ or Rust (any language that can be compiled)")])]),e("img",{src:g,class:"rounded"})],-1)])),_:1},16))}};export{y as default};
